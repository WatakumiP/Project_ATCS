

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 14 21:49:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0xA0,32,_STACK
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC12F1822 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     008C                     	;# 
    88     0091                     	;# 
    89     0092                     	;# 
    90     0095                     	;# 
    91     0096                     	;# 
    92     0097                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009A                     	;# 
    96     009B                     	;# 
    97     009B                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     010C                     	;# 
   102     0111                     	;# 
   103     0112                     	;# 
   104     0115                     	;# 
   105     0116                     	;# 
   106     0117                     	;# 
   107     0118                     	;# 
   108     0119                     	;# 
   109     011A                     	;# 
   110     011B                     	;# 
   111     011D                     	;# 
   112     011D                     	;# 
   113     018C                     	;# 
   114     0191                     	;# 
   115     0191                     	;# 
   116     0192                     	;# 
   117     0193                     	;# 
   118     0193                     	;# 
   119     0193                     	;# 
   120     0194                     	;# 
   121     0195                     	;# 
   122     0196                     	;# 
   123     0199                     	;# 
   124     019A                     	;# 
   125     019B                     	;# 
   126     019B                     	;# 
   127     019B                     	;# 
   128     019B                     	;# 
   129     019C                     	;# 
   130     019C                     	;# 
   131     019D                     	;# 
   132     019E                     	;# 
   133     019F                     	;# 
   134     020C                     	;# 
   135     0211                     	;# 
   136     0211                     	;# 
   137     0212                     	;# 
   138     0212                     	;# 
   139     0213                     	;# 
   140     0213                     	;# 
   141     0214                     	;# 
   142     0214                     	;# 
   143     0215                     	;# 
   144     0215                     	;# 
   145     0215                     	;# 
   146     0216                     	;# 
   147     0216                     	;# 
   148     0217                     	;# 
   149     0217                     	;# 
   150     0291                     	;# 
   151     0291                     	;# 
   152     0292                     	;# 
   153     0293                     	;# 
   154     0294                     	;# 
   155     0295                     	;# 
   156     0295                     	;# 
   157     0296                     	;# 
   158     0391                     	;# 
   159     0392                     	;# 
   160     0393                     	;# 
   161     039A                     	;# 
   162     039C                     	;# 
   163     039D                     	;# 
   164     039E                     	;# 
   165     039F                     	;# 
   166     0FE4                     	;# 
   167     0FE5                     	;# 
   168     0FE6                     	;# 
   169     0FE7                     	;# 
   170     0FE8                     	;# 
   171     0FE9                     	;# 
   172     0FEA                     	;# 
   173     0FEB                     	;# 
   174     0FED                     	;# 
   175     0FEE                     	;# 
   176     0FEF                     	;# 
   177     0000                     	;# 
   178     0001                     	;# 
   179     0002                     	;# 
   180     0003                     	;# 
   181     0004                     	;# 
   182     0005                     	;# 
   183     0006                     	;# 
   184     0007                     	;# 
   185     0008                     	;# 
   186     0009                     	;# 
   187     000A                     	;# 
   188     000B                     	;# 
   189     000C                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     008C                     	;# 
   204     0091                     	;# 
   205     0092                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     010C                     	;# 
   218     0111                     	;# 
   219     0112                     	;# 
   220     0115                     	;# 
   221     0116                     	;# 
   222     0117                     	;# 
   223     0118                     	;# 
   224     0119                     	;# 
   225     011A                     	;# 
   226     011B                     	;# 
   227     011D                     	;# 
   228     011D                     	;# 
   229     018C                     	;# 
   230     0191                     	;# 
   231     0191                     	;# 
   232     0192                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0193                     	;# 
   236     0194                     	;# 
   237     0195                     	;# 
   238     0196                     	;# 
   239     0199                     	;# 
   240     019A                     	;# 
   241     019B                     	;# 
   242     019B                     	;# 
   243     019B                     	;# 
   244     019B                     	;# 
   245     019C                     	;# 
   246     019C                     	;# 
   247     019D                     	;# 
   248     019E                     	;# 
   249     019F                     	;# 
   250     020C                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0216                     	;# 
   263     0216                     	;# 
   264     0217                     	;# 
   265     0217                     	;# 
   266     0291                     	;# 
   267     0291                     	;# 
   268     0292                     	;# 
   269     0293                     	;# 
   270     0294                     	;# 
   271     0295                     	;# 
   272     0295                     	;# 
   273     0296                     	;# 
   274     0391                     	;# 
   275     0392                     	;# 
   276     0393                     	;# 
   277     039A                     	;# 
   278     039C                     	;# 
   279     039D                     	;# 
   280     039E                     	;# 
   281     039F                     	;# 
   282     0FE4                     	;# 
   283     0FE5                     	;# 
   284     0FE6                     	;# 
   285     0FE7                     	;# 
   286     0FE8                     	;# 
   287     0FE9                     	;# 
   288     0FEA                     	;# 
   289     0FEB                     	;# 
   290     0FED                     	;# 
   291     0FEE                     	;# 
   292     0FEF                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     0011                     	;# 
   307     0012                     	;# 
   308     0015                     	;# 
   309     0016                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001C                     	;# 
   317     001E                     	;# 
   318     001F                     	;# 
   319     008C                     	;# 
   320     0091                     	;# 
   321     0092                     	;# 
   322     0095                     	;# 
   323     0096                     	;# 
   324     0097                     	;# 
   325     0098                     	;# 
   326     0099                     	;# 
   327     009A                     	;# 
   328     009B                     	;# 
   329     009B                     	;# 
   330     009C                     	;# 
   331     009D                     	;# 
   332     009E                     	;# 
   333     010C                     	;# 
   334     0111                     	;# 
   335     0112                     	;# 
   336     0115                     	;# 
   337     0116                     	;# 
   338     0117                     	;# 
   339     0118                     	;# 
   340     0119                     	;# 
   341     011A                     	;# 
   342     011B                     	;# 
   343     011D                     	;# 
   344     011D                     	;# 
   345     018C                     	;# 
   346     0191                     	;# 
   347     0191                     	;# 
   348     0192                     	;# 
   349     0193                     	;# 
   350     0193                     	;# 
   351     0193                     	;# 
   352     0194                     	;# 
   353     0195                     	;# 
   354     0196                     	;# 
   355     0199                     	;# 
   356     019A                     	;# 
   357     019B                     	;# 
   358     019B                     	;# 
   359     019B                     	;# 
   360     019B                     	;# 
   361     019C                     	;# 
   362     019C                     	;# 
   363     019D                     	;# 
   364     019E                     	;# 
   365     019F                     	;# 
   366     020C                     	;# 
   367     0211                     	;# 
   368     0211                     	;# 
   369     0212                     	;# 
   370     0212                     	;# 
   371     0213                     	;# 
   372     0213                     	;# 
   373     0214                     	;# 
   374     0214                     	;# 
   375     0215                     	;# 
   376     0215                     	;# 
   377     0215                     	;# 
   378     0216                     	;# 
   379     0216                     	;# 
   380     0217                     	;# 
   381     0217                     	;# 
   382     0291                     	;# 
   383     0291                     	;# 
   384     0292                     	;# 
   385     0293                     	;# 
   386     0294                     	;# 
   387     0295                     	;# 
   388     0295                     	;# 
   389     0296                     	;# 
   390     0391                     	;# 
   391     0392                     	;# 
   392     0393                     	;# 
   393     039A                     	;# 
   394     039C                     	;# 
   395     039D                     	;# 
   396     039E                     	;# 
   397     039F                     	;# 
   398     0FE4                     	;# 
   399     0FE5                     	;# 
   400     0FE6                     	;# 
   401     0FE7                     	;# 
   402     0FE8                     	;# 
   403     0FE9                     	;# 
   404     0FEA                     	;# 
   405     0FEB                     	;# 
   406     0FED                     	;# 
   407     0FEE                     	;# 
   408     0FEF                     	;# 
   409     0000                     	;# 
   410     0001                     	;# 
   411     0002                     	;# 
   412     0003                     	;# 
   413     0004                     	;# 
   414     0005                     	;# 
   415     0006                     	;# 
   416     0007                     	;# 
   417     0008                     	;# 
   418     0009                     	;# 
   419     000A                     	;# 
   420     000B                     	;# 
   421     000C                     	;# 
   422     0011                     	;# 
   423     0012                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0016                     	;# 
   427     0017                     	;# 
   428     0018                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001E                     	;# 
   434     001F                     	;# 
   435     008C                     	;# 
   436     0091                     	;# 
   437     0092                     	;# 
   438     0095                     	;# 
   439     0096                     	;# 
   440     0097                     	;# 
   441     0098                     	;# 
   442     0099                     	;# 
   443     009A                     	;# 
   444     009B                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     010C                     	;# 
   450     0111                     	;# 
   451     0112                     	;# 
   452     0115                     	;# 
   453     0116                     	;# 
   454     0117                     	;# 
   455     0118                     	;# 
   456     0119                     	;# 
   457     011A                     	;# 
   458     011B                     	;# 
   459     011D                     	;# 
   460     011D                     	;# 
   461     018C                     	;# 
   462     0191                     	;# 
   463     0191                     	;# 
   464     0192                     	;# 
   465     0193                     	;# 
   466     0193                     	;# 
   467     0193                     	;# 
   468     0194                     	;# 
   469     0195                     	;# 
   470     0196                     	;# 
   471     0199                     	;# 
   472     019A                     	;# 
   473     019B                     	;# 
   474     019B                     	;# 
   475     019B                     	;# 
   476     019B                     	;# 
   477     019C                     	;# 
   478     019C                     	;# 
   479     019D                     	;# 
   480     019E                     	;# 
   481     019F                     	;# 
   482     020C                     	;# 
   483     0211                     	;# 
   484     0211                     	;# 
   485     0212                     	;# 
   486     0212                     	;# 
   487     0213                     	;# 
   488     0213                     	;# 
   489     0214                     	;# 
   490     0214                     	;# 
   491     0215                     	;# 
   492     0215                     	;# 
   493     0215                     	;# 
   494     0216                     	;# 
   495     0216                     	;# 
   496     0217                     	;# 
   497     0217                     	;# 
   498     0291                     	;# 
   499     0291                     	;# 
   500     0292                     	;# 
   501     0293                     	;# 
   502     0294                     	;# 
   503     0295                     	;# 
   504     0295                     	;# 
   505     0296                     	;# 
   506     0391                     	;# 
   507     0392                     	;# 
   508     0393                     	;# 
   509     039A                     	;# 
   510     039C                     	;# 
   511     039D                     	;# 
   512     039E                     	;# 
   513     039F                     	;# 
   514     0FE4                     	;# 
   515     0FE5                     	;# 
   516     0FE6                     	;# 
   517     0FE7                     	;# 
   518     0FE8                     	;# 
   519     0FE9                     	;# 
   520     0FEA                     	;# 
   521     0FEB                     	;# 
   522     0FED                     	;# 
   523     0FEE                     	;# 
   524     0FEF                     	;# 
   525                           
   526                           	psect	idataBANK0
   527     04FB                     __pidataBANK0:
   528                           
   529                           ;initializer for _EE_STORE
   530     04FB  3406               	retlw	6
   531     04FC  34FF               	retlw	255
   532     04FD  3400               	retlw	0
   533     04FE  3400               	retlw	0
   534     04FF  3401               	retlw	1
   535     0500  3400               	retlw	0
   536     0501  34FF               	retlw	255
   537     0502  340F               	retlw	15
   538     0503  34FF               	retlw	255
   539     0504  340F               	retlw	15
   540     0505  34FF               	retlw	255
   541     0506  340F               	retlw	15
   542     0507  34AA               	retlw	170
   543     0508  3400               	retlw	0
   544     0509  3400               	retlw	0
   545     050A  3400               	retlw	0
   546                           
   547                           	psect	stringtext1
   548     04BB                     __pstringtext1:
   549     04BB                     _PWM_DATA:
   550     04BB  3400               	retlw	0
   551     04BC  3400               	retlw	0
   552     04BD  347F               	retlw	127
   553     04BE  3480               	retlw	128
   554     04BF  34BF               	retlw	191
   555     04C0  34C0               	retlw	192
   556     04C1  34E7               	retlw	231
   557     04C2  34E8               	retlw	232
   558     04C3  34FC               	retlw	252
   559     04C4  34FD               	retlw	253
   560     04C5  34FE               	retlw	254
   561     04C6  34FF               	retlw	255
   562     04C7  3400               	retlw	0
   563     04C8  3400               	retlw	0
   564     04C9  3400               	retlw	0
   565     04CA  3400               	retlw	0
   566     04CB  3400               	retlw	0
   567     04CC  3400               	retlw	0
   568     04CD  3400               	retlw	0
   569     04CE  3400               	retlw	0
   570     04CF  3400               	retlw	0
   571     04D0  3400               	retlw	0
   572     04D1  3400               	retlw	0
   573     04D2  3400               	retlw	0
   574     04D3  3400               	retlw	0
   575     04D4  3400               	retlw	0
   576     04D5  3400               	retlw	0
   577     04D6  3400               	retlw	0
   578     04D7  3400               	retlw	0
   579     04D8  3400               	retlw	0
   580     04D9  3400               	retlw	0
   581     04DA  3400               	retlw	0
   582     04DB  3400               	retlw	0
   583     04DC  3400               	retlw	0
   584     04DD  3400               	retlw	0
   585     04DE  3400               	retlw	0
   586     04DF  3400               	retlw	0
   587     04E0  3400               	retlw	0
   588     04E1  3400               	retlw	0
   589     04E2  3400               	retlw	0
   590     04E3  3400               	retlw	0
   591     04E4  3400               	retlw	0
   592     04E5  3400               	retlw	0
   593     04E6  3400               	retlw	0
   594     04E7  3400               	retlw	0
   595     04E8  3400               	retlw	0
   596     04E9  3400               	retlw	0
   597     04EA  3400               	retlw	0
   598     04EB  3400               	retlw	0
   599     04EC  3400               	retlw	0
   600     04ED  3400               	retlw	0
   601     04EE  3400               	retlw	0
   602     04EF  3400               	retlw	0
   603     04F0  3400               	retlw	0
   604     04F1  3400               	retlw	0
   605     04F2  3400               	retlw	0
   606     04F3  3400               	retlw	0
   607     04F4  3400               	retlw	0
   608     04F5  3400               	retlw	0
   609     04F6  3400               	retlw	0
   610     04F7  3400               	retlw	0
   611     04F8  3400               	retlw	0
   612     04F9  3400               	retlw	0
   613     04FA  3400               	retlw	0
   614     04FB                     __end_of_PWM_DATA:
   615                           
   616                           	psect	stringtext2
   617     0511                     __pstringtext2:
   618     0511                     _DCC_ADRS:
   619     0511  347F               	retlw	127
   620     0512  34BF               	retlw	191
   621     0513  34E7               	retlw	231
   622     0514  34FC               	retlw	252
   623     0515  34FE               	retlw	254
   624     0516                     __end_of_DCC_ADRS:
   625     0016                     _TMR1	set	22
   626     0012                     _PIR2bits	set	18
   627     0011                     _PIR1	set	17
   628     0011                     _PIR1bits	set	17
   629     000B                     _INTCONbits	set	11
   630     001C                     _T2CON	set	28
   631     001B                     _PR2	set	27
   632     0018                     _T1CON	set	24
   633     000B                     _INTCON	set	11
   634     000C                     _PORTA	set	12
   635     0092                     _PIE2	set	146
   636     0091                     _PIE1	set	145
   637     008C                     _TRISA	set	140
   638     0099                     _OSCCON	set	153
   639     011D                     _APFCON	set	285
   640     0193                     _EEDAT	set	403
   641     0191                     _EEADR	set	401
   642     0196                     _EECON2	set	406
   643     0195                     _EECON1bits	set	405
   644     0195                     _EECON1	set	405
   645     018C                     _ANSELA	set	396
   646     0291                     _CCPR1L	set	657
   647     0296                     _PSTR1CON	set	662
   648     0293                     _CCP1CON	set	659
   649     0393                     _IOCAF	set	915
   650     0391                     _IOCAP	set	913
   651                           
   652                           	psect	cinit
   653     00AD                     start_initialization:	
   654                           ; #config settings
   655                           
   656     00AD                     __initialization:
   657                           
   658                           ; Initialize objects allocated to BANK0
   659     00AD  30FB               	movlw	low __pidataBANK0
   660     00AE  0084               	movwf	4
   661     00AF  3084               	movlw	(high __pidataBANK0)| (0+128)
   662     00B0  0085               	movwf	5
   663     00B1  304C               	movlw	low __pdataBANK0
   664     00B2  0086               	movwf	6
   665     00B3  3000               	movlw	high __pdataBANK0
   666     00B4  0087               	movwf	7
   667     00B5  3010               	movlw	16
   668     00B6  250B               	fcall	init_ram
   669                           
   670                           ; Clear objects allocated to COMMON
   671     00B7  01F8               	clrf	__pbssCOMMON& (0+127)
   672     00B8  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   673                           
   674                           ; Clear objects allocated to BANK0
   675     00B9  01DC               	clrf	__pbssBANK0& (0+127)
   676     00BA  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   677     00BB                     end_of_initialization:	
   678                           ;End of C runtime variable initialization code
   679                           
   680     00BB                     __end_of__initialization:
   681     00BB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   682     00BC  0020               	movlb	0
   683     00BD  2BE0               	ljmp	_main	;jump to C main() function
   684                           
   685                           	psect	bssCOMMON
   686     0078                     __pbssCOMMON:
   687     0078                     _COUNTER:
   688     0078                     	ds	1
   689     0079                     _DATA:
   690     0079                     	ds	1
   691                           
   692                           	psect	bssBANK0
   693     005C                     __pbssBANK0:
   694     005C                     _STCR:
   695     005C                     	ds	1
   696     005D                     _COM_FLAG:
   697     005D                     	ds	1
   698                           
   699                           	psect	dataBANK0
   700     004C                     __pdataBANK0:
   701     004C                     _EE_STORE:
   702     004C                     	ds	16
   703                           
   704                           	psect	inittext
   705     050B                     init_ram:
   706     050B  00FE               	movwf	126
   707     050C                     initloop:
   708     050C  0012               	moviw fsr0++
   709     050D  001E               	movwi fsr1++
   710     050E  0BFE               	decfsz	126,f
   711     050F  2D0C               	goto	initloop
   712     0510  3400               	retlw	0
   713                           
   714                           	psect	cstackCOMMON
   715     0070                     __pcstackCOMMON:
   716     0070                     ?_EEPROM_SELECT:
   717     0070                     ?_main:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ?_isr:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ?i1_EEPROM_SELECT:	
   724                           ; 1 bytes @ 0x0
   725                           
   726     0070                     ??i1_EEPROM_SELECT:	
   727                           ; 1 bytes @ 0x0
   728                           
   729                           
   730                           ; 1 bytes @ 0x0
   731     0070                     	ds	2
   732     0072                     i1EEPROM_SELECT@EE_SAVE:
   733                           
   734                           ; 2 bytes @ 0x2
   735     0072                     	ds	2
   736     0074                     i1EEPROM_SELECT@COUNT:
   737                           
   738                           ; 1 bytes @ 0x4
   739     0074                     	ds	1
   740     0075                     ??_isr:
   741                           
   742                           ; 1 bytes @ 0x5
   743     0075                     	ds	1
   744     0076                     isr@COUNT:
   745                           
   746                           ; 2 bytes @ 0x6
   747     0076                     	ds	2
   748                           
   749                           	psect	cstackBANK0
   750     0020                     __pcstackBANK0:
   751     0020                     ??_EEPROM_SELECT:
   752     0020                     ?_DEC_SET:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0020                     ?_CONFIG_SET:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0020                     DEC_SET@P_RANGE:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0020                     CONFIG_SET@P_RANGE:	
   762                           ; 1 bytes @ 0x0
   763                           
   764                           
   765                           ; 1 bytes @ 0x0
   766     0020                     	ds	1
   767     0021                     ??_DEC_SET:
   768     0021                     ??_CONFIG_SET:	
   769                           ; 1 bytes @ 0x1
   770                           
   771     0021                     DEC_SET@DATA:	
   772                           ; 1 bytes @ 0x1
   773                           
   774     0021                     CONFIG_SET@DATA:	
   775                           ; 1 bytes @ 0x1
   776                           
   777                           
   778                           ; 1 bytes @ 0x1
   779     0021                     	ds	1
   780     0022                     ?_PACKET_CONTROL:
   781     0022                     PACKET_CONTROL@P_RANGE:	
   782                           ; 1 bytes @ 0x2
   783                           
   784     0022                     EEPROM_SELECT@EE_SAVE:	
   785                           ; 1 bytes @ 0x2
   786                           
   787                           
   788                           ; 2 bytes @ 0x2
   789     0022                     	ds	1
   790     0023                     ??_PACKET_CONTROL:
   791                           
   792                           ; 1 bytes @ 0x3
   793     0023                     	ds	1
   794     0024                     EEPROM_SELECT@COUNT:
   795                           
   796                           ; 1 bytes @ 0x4
   797     0024                     	ds	2
   798     0026                     PACKET_CONTROL@DATA:
   799                           
   800                           ; 1 bytes @ 0x6
   801     0026                     	ds	1
   802     0027                     ??_main:
   803                           
   804                           ; 1 bytes @ 0x7
   805     0027                     	ds	2
   806     0029                     main@BYPASS:
   807                           
   808                           ; 32 bytes @ 0x9
   809     0029                     	ds	32
   810     0049                     main@PACKET:
   811                           
   812                           ; 1 bytes @ 0x29
   813     0049                     	ds	1
   814     004A                     main@count:
   815                           
   816                           ; 1 bytes @ 0x2A
   817     004A                     	ds	1
   818     004B                     main@DCC_PACKET_RANGE:
   819                           
   820                           ; 1 bytes @ 0x2B
   821     004B                     	ds	1
   822                           
   823                           	psect	maintext
   824     03E0                     __pmaintext:	
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   827 ;;
   828 ;; *************** function _main *****************
   829 ;; Defined at:
   830 ;;		line 33 in file "Project_ATCS_Decorder_Main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  count           1   42[BANK0 ] unsigned char 
   835 ;;  BYPASS         32    9[BANK0 ] unsigned char [32]
   836 ;;  DCC_PACKET_R    1   43[BANK0 ] unsigned char 
   837 ;;  PACKET          1   41[BANK0 ] unsigned char 
   838 ;;  CHECKSUM        1    0        unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : B1F/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0
   848 ;;      Params:         0       0
   849 ;;      Locals:         0      35
   850 ;;      Temps:          0       2
   851 ;;      Totals:         0      37
   852 ;;Total ram usage:       37 bytes
   853 ;; Hardware stack levels required when called: 4
   854 ;; This function calls:
   855 ;;		_EEPROM_SELECT
   856 ;;		_PACKET_CONTROL
   857 ;; This function is called by:
   858 ;;		Startup code after reset
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862     03E0                     _main:	
   863                           ;psect for function _main
   864                           
   865                           
   866                           ;Project_ATCS_Decorder_Main.c: 35:     OSCCON = 0x72;
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   870     03E0  3072               	movlw	114
   871     03E1  0021               	movlb	1	; select bank1
   872     03E2  0099               	movwf	25	;volatile
   873                           
   874                           ;Project_ATCS_Decorder_Main.c: 36:     ANSELA = 0x00;
   875     03E3  0023               	movlb	3	; select bank3
   876     03E4  018C               	clrf	12	;volatile
   877                           
   878                           ;Project_ATCS_Decorder_Main.c: 38:     TRISA = 0x04;
   879     03E5  3004               	movlw	4
   880     03E6  0021               	movlb	1	; select bank1
   881     03E7  008C               	movwf	12	;volatile
   882                           
   883                           ;Project_ATCS_Decorder_Main.c: 39:     PORTA = 0x00;
   884     03E8  0020               	movlb	0	; select bank0
   885     03E9  018C               	clrf	12	;volatile
   886                           
   887                           ;Project_ATCS_Decorder_Main.c: 41:     APFCON = 0x03;
   888     03EA  3003               	movlw	3
   889     03EB  0022               	movlb	2	; select bank2
   890     03EC  009D               	movwf	29	;volatile
   891                           
   892                           ;Project_ATCS_Decorder_Main.c: 43:     INTCON = 0xC8;
   893     03ED  30C8               	movlw	200
   894     03EE  008B               	movwf	11	;volatile
   895                           
   896                           ;Project_ATCS_Decorder_Main.c: 44:     IOCAP = 0x04;
   897     03EF  3004               	movlw	4
   898     03F0  0027               	movlb	7	; select bank7
   899     03F1  0091               	movwf	17	;volatile
   900                           
   901                           ;Project_ATCS_Decorder_Main.c: 45:     PIE1 = 0x81;
   902     03F2  3081               	movlw	129
   903     03F3  0021               	movlb	1	; select bank1
   904     03F4  0091               	movwf	17	;volatile
   905                           
   906                           ;Project_ATCS_Decorder_Main.c: 46:     PIE2 = 0x10;
   907     03F5  3010               	movlw	16
   908     03F6  0092               	movwf	18	;volatile
   909                           
   910                           ;Project_ATCS_Decorder_Main.c: 47:     T1CON = 0x01;
   911     03F7  3001               	movlw	1
   912     03F8  0020               	movlb	0	; select bank0
   913     03F9  0098               	movwf	24	;volatile
   914                           
   915                           ;Project_ATCS_Decorder_Main.c: 49:     CCP1CON = 0x0F;
   916     03FA  300F               	movlw	15
   917     03FB  0025               	movlb	5	; select bank5
   918     03FC  0093               	movwf	19	;volatile
   919                           
   920                           ;Project_ATCS_Decorder_Main.c: 50:     PSTR1CON = 0x01;
   921     03FD  3001               	movlw	1
   922     03FE  0096               	movwf	22	;volatile
   923                           
   924                           ;Project_ATCS_Decorder_Main.c: 51:     PR2 = 0x19;
   925     03FF  3019               	movlw	25
   926     0400  0020               	movlb	0	; select bank0
   927     0401  009B               	movwf	27	;volatile
   928                           
   929                           ;Project_ATCS_Decorder_Main.c: 52:     CCPR1L = 0x00;
   930     0402  0025               	movlb	5	; select bank5
   931     0403  0191               	clrf	17	;volatile
   932                           
   933                           ;Project_ATCS_Decorder_Main.c: 53:     T2CON = 0x04;
   934     0404  3004               	movlw	4
   935     0405  0020               	movlb	0	; select bank0
   936     0406  009C               	movwf	28	;volatile
   937                           
   938                           ;Project_ATCS_Decorder_Main.c: 55:     EE_STORE.EE_STATE = EE_WRITE_UID;
   939     0407  3002               	movlw	2
   940     0408  00CC               	movwf	_EE_STORE
   941                           
   942                           ;Project_ATCS_Decorder_Main.c: 56:     EEPROM_SELECT();
   943     0409  20BE               	fcall	_EEPROM_SELECT
   944     040A                     l1712:
   945                           
   946                           ;Project_ATCS_Decorder_Main.c: 60:         if(COM_FLAG & 0x04){
   947     040A  0020               	movlb	0	; select bank0
   948     040B  1D5D               	btfss	_COM_FLAG,2
   949     040C  2C0A               	goto	l1712
   950                           
   951                           ;Project_ATCS_Decorder_Main.c: 62:             UnCHR DCC_PACKET_RANGE = STCR;
   952     040D  085C               	movf	_STCR,w
   953     040E  00CB               	movwf	main@DCC_PACKET_RANGE
   954                           
   955                           ;Project_ATCS_Decorder_Main.c: 63:             UnCHR BYPASS[32];;Project_ATCS_Decorder_M
      +                          ain.c: 64:             UnCHR PACKET = STACK[0];
   956     040F  0021               	movlb	1	; select bank1
   957     0410  0820               	movf	32,w
   958     0411  0020               	movlb	0	; select bank0
   959     0412  00C9               	movwf	main@PACKET
   960                           
   961                           ;Project_ATCS_Decorder_Main.c: 66:             COM_FLAG = COM_FLAG & 0xFB;
   962     0413  085D               	movf	_COM_FLAG,w
   963     0414  39FB               	andlw	251
   964     0415  00DD               	movwf	_COM_FLAG
   965     0416                     l1722:
   966                           
   967                           ;Project_ATCS_Decorder_Main.c: 68:                 STCR--;
   968     0416  3001               	movlw	1
   969     0417  02DC               	subwf	_STCR,f
   970                           
   971                           ;Project_ATCS_Decorder_Main.c: 69:                 BYPASS[STCR] = STACK[STCR];
   972     0418  085C               	movf	_STCR,w
   973     0419  3E29               	addlw	(low (main@BYPASS| 0))& (0+255)
   974     041A  0086               	movwf	6
   975     041B  0187               	clrf	7
   976     041C  085C               	movf	_STCR,w
   977     041D  3EA0               	addlw	160
   978     041E  0084               	movwf	4
   979     041F  0185               	clrf	5
   980     0420  0800               	movf	0,w
   981     0421  0081               	movwf	1
   982                           
   983                           ;Project_ATCS_Decorder_Main.c: 70:             }while(STCR);
   984     0422  085C               	movf	_STCR,w
   985     0423  1D03               	btfss	3,2
   986     0424  2C16               	goto	l1722
   987                           
   988                           ;Project_ATCS_Decorder_Main.c: 72:             if(DCC_PACKET_RANGE < 7){
   989     0425  3007               	movlw	7
   990     0426  024B               	subwf	main@DCC_PACKET_RANGE,w
   991     0427  1803               	skipnc
   992     0428  2C0A               	goto	l1712
   993     0429  30A0               	movlw	160
   994     042A  0086               	movwf	6
   995     042B  3000               	movlw	0
   996     042C  0087               	movwf	7
   997                           
   998                           ;Project_ATCS_Decorder_Main.c: 74:                 for(UnCHR count = 1 ;count < DCC_PACK
      +                          ET_RANGE;count++){
   999     042D  01CA               	clrf	main@count
  1000     042E  0ACA               	incf	main@count,f
  1001     042F                     l1738:
  1002     042F  084B               	movf	main@DCC_PACKET_RANGE,w
  1003     0430  024A               	subwf	main@count,w
  1004     0431  1803               	btfsc	3,0
  1005     0432  2C3F               	goto	l1740
  1006                           
  1007                           ;Project_ATCS_Decorder_Main.c: 75:                     PACKET = PACKET ^ BYPASS[count];
  1008     0433  084A               	movf	main@count,w
  1009     0434  3E29               	addlw	(low (main@BYPASS| 0))& (0+255)
  1010     0435  0086               	movwf	6
  1011     0436  0187               	clrf	7
  1012     0437  0801               	movf	1,w
  1013     0438  0649               	xorwf	main@PACKET,w
  1014     0439  00C9               	movwf	main@PACKET
  1015                           
  1016                           ;Project_ATCS_Decorder_Main.c: 76:                 }
  1017     043A  3001               	movlw	1
  1018     043B  00A7               	movwf	??_main
  1019     043C  0827               	movf	??_main,w
  1020     043D  07CA               	addwf	main@count,f
  1021     043E  2C2F               	goto	l1738
  1022     043F                     l1740:
  1023                           
  1024                           ;Project_ATCS_Decorder_Main.c: 78:                 if(PACKET == STACK[DCC_PACKET_RANGE])
      +                          {
  1025     043F  084B               	movf	main@DCC_PACKET_RANGE,w
  1026     0440  3EA0               	addlw	160
  1027     0441  0086               	movwf	6
  1028     0442  0187               	clrf	7
  1029     0443  0801               	movf	1,w
  1030     0444  0649               	xorwf	main@PACKET,w
  1031     0445  1D03               	skipz
  1032     0446  2C0A               	goto	l1712
  1033                           
  1034                           ;Project_ATCS_Decorder_Main.c: 79:                     if(BYPASS[0] == 0x00){
  1035     0447  0829               	movf	main@BYPASS,w
  1036     0448  1D03               	btfss	3,2
  1037     0449  2C4F               	goto	l1746
  1038                           
  1039                           ;Project_ATCS_Decorder_Main.c: 80:                         PACKET_CONTROL(BYPASS,&DCC_PA
      +                          CKET_RANGE);
  1040     044A  304B               	movlw	(low (main@DCC_PACKET_RANGE| 0))& (0+255)
  1041     044B  00A2               	movwf	PACKET_CONTROL@P_RANGE
  1042     044C  3029               	movlw	(low (main@BYPASS| 0))& (0+255)
  1043     044D  246C               	fcall	_PACKET_CONTROL
  1044                           
  1045                           ;Project_ATCS_Decorder_Main.c: 81:                     }else if(BYPASS[0] <= 0x7F){
  1046     044E  2C0A               	goto	l1712
  1047     044F                     l1746:
  1048     044F  3080               	movlw	128
  1049     0450  0229               	subwf	main@BYPASS,w
  1050     0451  1803               	skipnc
  1051     0452  2C0A               	goto	l1712
  1052                           
  1053                           ;Project_ATCS_Decorder_Main.c: 82:                         EE_STORE.EE_ADRS = 0x00;
  1054     0453  01CE               	clrf	_EE_STORE+2
  1055     0454  01CF               	clrf	_EE_STORE+3
  1056                           
  1057                           ;Project_ATCS_Decorder_Main.c: 83:                         EE_STORE.EE_STATE = EE_READ_S
      +                          ;
  1058     0455  01CC               	clrf	_EE_STORE
  1059                           
  1060                           ;Project_ATCS_Decorder_Main.c: 84:                         EE_STORE.EE_CONFIG = 0x40;
  1061     0456  3040               	movlw	64
  1062     0457  00CD               	movwf	_EE_STORE+1
  1063                           
  1064                           ;Project_ATCS_Decorder_Main.c: 85:                         EE_STORE.EE_REPORT[0] = 0xAA;
  1065     0458  30AA               	movlw	170
  1066     0459  00D8               	movwf	_EE_STORE+12
  1067                           
  1068                           ;Project_ATCS_Decorder_Main.c: 86:                         EEPROM_SELECT();
  1069     045A  20BE               	fcall	_EEPROM_SELECT
  1070                           
  1071                           ;Project_ATCS_Decorder_Main.c: 87:                         if(BYPASS[0] == EE_STORE.EE_D
      +                          ATA[0]){
  1072     045B  0020               	movlb	0	; select bank0
  1073     045C  0829               	movf	main@BYPASS,w
  1074     045D  00A7               	movwf	??_main
  1075     045E  01A8               	clrf	??_main+1
  1076     045F  0851               	movf	_EE_STORE+5,w
  1077     0460  0628               	xorwf	??_main+1,w
  1078     0461  1D03               	skipz
  1079     0462  2C65               	goto	u1035
  1080     0463  0850               	movf	_EE_STORE+4,w
  1081     0464  0627               	xorwf	??_main,w
  1082     0465                     u1035:
  1083     0465  1D03               	skipz
  1084     0466  2C0A               	goto	l1712
  1085                           
  1086                           ;Project_ATCS_Decorder_Main.c: 88:                             PACKET_CONTROL(BYPASS,&DC
      +                          C_PACKET_RANGE);
  1087     0467  304B               	movlw	(low (main@DCC_PACKET_RANGE| 0))& (0+255)
  1088     0468  00A2               	movwf	PACKET_CONTROL@P_RANGE
  1089     0469  3029               	movlw	(low (main@BYPASS| 0))& (0+255)
  1090     046A  246C               	fcall	_PACKET_CONTROL
  1091                           
  1092                           ;Project_ATCS_Decorder_Main.c: 91:                 }
  1093     046B  2C0A               	goto	l1712
  1094     046C                     __end_of_main:
  1095                           
  1096                           	psect	text1
  1097     046C                     __ptext1:	
  1098 ;; *************** function _PACKET_CONTROL *****************
  1099 ;; Defined at:
  1100 ;;		line 138 in file "Project_ATCS_Decorder_Module.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  DATA            1    wreg     PTR unsigned char 
  1103 ;;		 -> main@BYPASS(32), 
  1104 ;;  P_RANGE         1    2[BANK0 ] PTR unsigned char 
  1105 ;;		 -> main@DCC_PACKET_RANGE(1), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  DATA            1    6[BANK0 ] PTR unsigned char 
  1108 ;;		 -> main@BYPASS(32), 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0
  1118 ;;      Params:         0       1
  1119 ;;      Locals:         0       1
  1120 ;;      Temps:          0       3
  1121 ;;      Totals:         0       5
  1122 ;;Total ram usage:        5 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 3
  1125 ;; This function calls:
  1126 ;;		_CONFIG_SET
  1127 ;;		_DEC_SET
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133     046C                     _PACKET_CONTROL:	
  1134                           ;psect for function _PACKET_CONTROL
  1135                           
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _PACKET_CONTROL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1139                           ;PACKET_CONTROL@DATA stored from wreg
  1140     046C  0020               	movlb	0	; select bank0
  1141     046D  00A6               	movwf	PACKET_CONTROL@DATA
  1142                           
  1143                           ;Project_ATCS_Decorder_Module.c: 139:     switch(DATA[1] >> 5){
  1144     046E  2C8F               	goto	l1532
  1145     046F                     l1512:
  1146                           
  1147                           ;Project_ATCS_Decorder_Module.c: 141:             COM_FLAG &= 0xF7;
  1148     046F  30F7               	movlw	247
  1149     0470  00A3               	movwf	??_PACKET_CONTROL
  1150     0471  0823               	movf	??_PACKET_CONTROL,w
  1151     0472  05DD               	andwf	_COM_FLAG,f
  1152                           
  1153                           ;Project_ATCS_Decorder_Module.c: 142:             DEC_SET(DATA,P_RANGE);
  1154     0473  0822               	movf	PACKET_CONTROL@P_RANGE,w
  1155     0474  00A0               	movwf	DEC_SET@P_RANGE
  1156     0475  0826               	movf	PACKET_CONTROL@DATA,w
  1157     0476  2516               	fcall	_DEC_SET
  1158     0477  0008               	return
  1159     0478                     l198:	
  1160                           ;Project_ATCS_Decorder_Module.c: 144:         case 1:
  1161                           
  1162                           
  1163                           ;Project_ATCS_Decorder_Module.c: 145:             COM_FLAG |= 0x08;
  1164     0478  15DD               	bsf	_COM_FLAG,3
  1165                           
  1166                           ;Project_ATCS_Decorder_Module.c: 146:             return;
  1167     0479  0008               	return
  1168     047A                     l199:	
  1169                           ;Project_ATCS_Decorder_Module.c: 147:         case 2:
  1170                           
  1171                           
  1172                           ;Project_ATCS_Decorder_Module.c: 148:             COM_FLAG |= 0x10;
  1173     047A  165D               	bsf	_COM_FLAG,4
  1174                           
  1175                           ;Project_ATCS_Decorder_Module.c: 149:             return;
  1176     047B  0008               	return
  1177     047C                     l1518:
  1178                           
  1179                           ;Project_ATCS_Decorder_Module.c: 151:             COM_FLAG &= 0xEF;
  1180     047C  30EF               	movlw	239
  1181     047D  00A3               	movwf	??_PACKET_CONTROL
  1182     047E  0823               	movf	??_PACKET_CONTROL,w
  1183     047F  05DD               	andwf	_COM_FLAG,f
  1184     0480  0008               	return
  1185     0481                     l1522:
  1186                           
  1187                           ;Project_ATCS_Decorder_Module.c: 154:             COM_FLAG &= 0xDF;
  1188     0481  30DF               	movlw	223
  1189     0482  00A3               	movwf	??_PACKET_CONTROL
  1190     0483  0823               	movf	??_PACKET_CONTROL,w
  1191     0484  05DD               	andwf	_COM_FLAG,f
  1192     0485  0008               	return
  1193     0486                     l202:	
  1194                           ;Project_ATCS_Decorder_Module.c: 156:         case 5:
  1195                           
  1196                           
  1197                           ;Project_ATCS_Decorder_Module.c: 157:             COM_FLAG |= 0x20;
  1198     0486  16DD               	bsf	_COM_FLAG,5
  1199                           
  1200                           ;Project_ATCS_Decorder_Module.c: 158:             return;
  1201     0487  0008               	return
  1202     0488                     l203:	
  1203                           ;Project_ATCS_Decorder_Module.c: 159:         case 6:
  1204                           
  1205                           
  1206                           ;Project_ATCS_Decorder_Module.c: 160:             __nop();
  1207     0488  0000               	nop
  1208                           
  1209                           ;Project_ATCS_Decorder_Module.c: 161:             return;
  1210     0489  0008               	return
  1211     048A                     l1526:
  1212                           
  1213                           ;Project_ATCS_Decorder_Module.c: 163:             CONFIG_SET(DATA,P_RANGE);
  1214     048A  0822               	movf	PACKET_CONTROL@P_RANGE,w
  1215     048B  00A0               	movwf	CONFIG_SET@P_RANGE
  1216     048C  0826               	movf	PACKET_CONTROL@DATA,w
  1217     048D  2517               	fcall	_CONFIG_SET
  1218     048E  0008               	return
  1219     048F                     l1532:
  1220     048F  0A26               	incf	PACKET_CONTROL@DATA,w
  1221     0490  0086               	movwf	6
  1222     0491  0187               	clrf	7
  1223     0492  0801               	movf	1,w
  1224     0493  00A3               	movwf	??_PACKET_CONTROL
  1225     0494  3005               	movlw	5
  1226     0495                     u775:
  1227     0495  36A3               	lsrf	??_PACKET_CONTROL,f
  1228     0496  0B89               	decfsz	9,f
  1229     0497  2C95               	goto	u775
  1230     0498  0823               	movf	??_PACKET_CONTROL,w
  1231     0499  00A4               	movwf	??_PACKET_CONTROL+1
  1232     049A  01A5               	clrf	??_PACKET_CONTROL+2
  1233                           
  1234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 1, Range of values is 0 to 0
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            4     3 (average)
  1240                           ; direct_byte            8     6 (fixed)
  1241                           ; jumptable            260     6 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243     049B  0825               	movf	??_PACKET_CONTROL+2,w
  1244     049C  3A00               	xorlw	0	; case 0
  1245     049D  1903               	skipnz
  1246     049E  2CA0               	goto	l1938
  1247     049F  2CBA               	goto	l197
  1248     04A0                     l1938:
  1249                           
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 8, Range of values is 0 to 7
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; direct_byte           22     6 (fixed)
  1255                           ; simple_byte           25    13 (average)
  1256                           ; jumptable            260     6 (fixed)
  1257                           ;	Chosen strategy is simple_byte
  1258     04A0  0824               	movf	??_PACKET_CONTROL+1,w
  1259     04A1  3A00               	xorlw	0	; case 0
  1260     04A2  1903               	skipnz
  1261     04A3  2C6F               	goto	l1512
  1262     04A4  3A01               	xorlw	1	; case 1
  1263     04A5  1903               	skipnz
  1264     04A6  2C78               	goto	l198
  1265     04A7  3A03               	xorlw	3	; case 2
  1266     04A8  1903               	skipnz
  1267     04A9  2C7A               	goto	l199
  1268     04AA  3A01               	xorlw	1	; case 3
  1269     04AB  1903               	skipnz
  1270     04AC  2C7C               	goto	l1518
  1271     04AD  3A07               	xorlw	7	; case 4
  1272     04AE  1903               	skipnz
  1273     04AF  2C81               	goto	l1522
  1274     04B0  3A01               	xorlw	1	; case 5
  1275     04B1  1903               	skipnz
  1276     04B2  2C86               	goto	l202
  1277     04B3  3A03               	xorlw	3	; case 6
  1278     04B4  1903               	skipnz
  1279     04B5  2C88               	goto	l203
  1280     04B6  3A01               	xorlw	1	; case 7
  1281     04B7  1903               	skipnz
  1282     04B8  2C8A               	goto	l1526
  1283     04B9  2CBA               	goto	l197
  1284     04BA                     l197:
  1285     04BA  0008               	return
  1286     04BB                     __end_of_PACKET_CONTROL:
  1287                           
  1288                           	psect	text2
  1289     0516                     __ptext2:	
  1290 ;; *************** function _DEC_SET *****************
  1291 ;; Defined at:
  1292 ;;		line 167 in file "Project_ATCS_Decorder_Module.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  DATA            1    wreg     PTR unsigned char 
  1295 ;;		 -> main@BYPASS(32), 
  1296 ;;  P_RANGE         1    0[BANK0 ] PTR unsigned char 
  1297 ;;		 -> main@DCC_PACKET_RANGE(1), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  DATA            1    1[BANK0 ] PTR unsigned char 
  1300 ;;		 -> main@BYPASS(32), 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0
  1310 ;;      Params:         0       1
  1311 ;;      Locals:         0       1
  1312 ;;      Temps:          0       0
  1313 ;;      Totals:         0       2
  1314 ;;Total ram usage:        2 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 2
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_PACKET_CONTROL
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324     0516                     _DEC_SET:	
  1325                           ;psect for function _DEC_SET
  1326                           
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _DEC_SET: [wreg]
  1330     0516  0008               	return
  1331     0517                     __end_of_DEC_SET:
  1332                           
  1333                           	psect	text3
  1334     0517                     __ptext3:	
  1335 ;; *************** function _CONFIG_SET *****************
  1336 ;; Defined at:
  1337 ;;		line 171 in file "Project_ATCS_Decorder_Module.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  DATA            1    wreg     PTR unsigned char 
  1340 ;;		 -> main@BYPASS(32), 
  1341 ;;  P_RANGE         1    0[BANK0 ] PTR unsigned char 
  1342 ;;		 -> main@DCC_PACKET_RANGE(1), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  DATA            1    1[BANK0 ] PTR unsigned char 
  1345 ;;		 -> main@BYPASS(32), 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0
  1355 ;;      Params:         0       1
  1356 ;;      Locals:         0       1
  1357 ;;      Temps:          0       0
  1358 ;;      Totals:         0       2
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 2
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_PACKET_CONTROL
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369     0517                     _CONFIG_SET:	
  1370                           ;psect for function _CONFIG_SET
  1371                           
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _CONFIG_SET: [wreg]
  1375     0517  0008               	return
  1376     0518                     __end_of_CONFIG_SET:
  1377                           
  1378                           	psect	text4
  1379     00BE                     __ptext4:	
  1380 ;; *************** function _EEPROM_SELECT *****************
  1381 ;; Defined at:
  1382 ;;		line 12 in file "Project_ATCS_Decorder_Module.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  EE_SAVE         2    2[BANK0 ] unsigned int 
  1387 ;;  COUNT           1    4[BANK0 ] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0
  1397 ;;      Params:         0       0
  1398 ;;      Locals:         0       3
  1399 ;;      Temps:          0       2
  1400 ;;      Totals:         0       5
  1401 ;;Total ram usage:        5 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 2
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411     00BE                     _EEPROM_SELECT:	
  1412                           ;psect for function _EEPROM_SELECT
  1413                           
  1414                           
  1415                           ;Project_ATCS_Decorder_Module.c: 13:     INTCONbits.GIE = 0;
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _EEPROM_SELECT: [wreg-fsr1h+status,2+status,0]
  1419     00BE  138B               	bcf	11,7	;volatile
  1420                           
  1421                           ;Project_ATCS_Decorder_Module.c: 14:     UnCHR COUNT = 0x00 ;
  1422     00BF  0020               	movlb	0	; select bank0
  1423     00C0  01A4               	clrf	EEPROM_SELECT@COUNT
  1424                           
  1425                           ;Project_ATCS_Decorder_Module.c: 16:     switch (EE_STORE.EE_STATE) {
  1426     00C1  2A3C               	goto	l1502
  1427     00C2                     l1370:
  1428                           
  1429                           ;Project_ATCS_Decorder_Module.c: 19:                 if(EE_STORE.EE_REPORT[COUNT]){
  1430     00C2  0824               	movf	EEPROM_SELECT@COUNT,w
  1431     00C3  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1432     00C4  0086               	movwf	6
  1433     00C5  0187               	clrf	7
  1434     00C6  0801               	movf	1,w
  1435     00C7  1903               	btfsc	3,2
  1436     00C8  28E8               	goto	l1380
  1437                           
  1438                           ;Project_ATCS_Decorder_Module.c: 20:                     EEADR = EE_STORE.EE_ADRS;
  1439     00C9  084F               	movf	_EE_STORE+3,w
  1440     00CA  0023               	movlb	3	; select bank3
  1441     00CB  0092               	movwf	18	;volatile
  1442     00CC  0020               	movlb	0	; select bank0
  1443     00CD  084E               	movf	_EE_STORE+2,w
  1444     00CE  0023               	movlb	3	; select bank3
  1445     00CF  0091               	movwf	17	;volatile
  1446                           
  1447                           ;Project_ATCS_Decorder_Module.c: 21:                     EECON1 = EE_STORE.EE_CONFIG;
  1448     00D0  0020               	movlb	0	; select bank0
  1449     00D1  084D               	movf	_EE_STORE+1,w
  1450     00D2  0023               	movlb	3	; select bank3
  1451     00D3  0095               	movwf	21	;volsfr
  1452     00D4                     l153:	
  1453                           ;Project_ATCS_Decorder_Module.c: 22:                     while (EECON1bits.RD);
  1454                           
  1455     00D4  1815               	btfsc	21,0	;volsfr
  1456     00D5  28D4               	goto	l153
  1457                           
  1458                           ;Project_ATCS_Decorder_Module.c: 23:                     EE_STORE.EE_DATA[COUNT] = EEDAT
      +                          ;
  1459     00D6  0020               	movlb	0	; select bank0
  1460     00D7  3524               	lslf	EEPROM_SELECT@COUNT,w
  1461     00D8  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1462     00D9  0086               	movwf	6
  1463     00DA  0187               	clrf	7
  1464     00DB  0023               	movlb	3	; select bank3
  1465     00DC  0813               	movf	19,w	;volatile
  1466     00DD  3FC0               	movwi [0]fsr1
  1467     00DE  0814               	movf	20,w	;volatile
  1468     00DF  3FC1               	movwi [1]fsr1
  1469                           
  1470                           ;Project_ATCS_Decorder_Module.c: 24:                     INTCONbits.GIE = 1;
  1471     00E0  178B               	bsf	11,7	;volatile
  1472                           
  1473                           ;Project_ATCS_Decorder_Module.c: 25:                     EE_STORE.EE_REPORT[COUNT] = 0x0
      +                          0;
  1474     00E1  0020               	movlb	0	; select bank0
  1475     00E2  0824               	movf	EEPROM_SELECT@COUNT,w
  1476     00E3  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1477     00E4  0086               	movwf	6
  1478     00E5  0187               	clrf	7
  1479     00E6  0181               	clrf	1
  1480     00E7  0008               	return
  1481     00E8                     l1380:
  1482                           
  1483                           ;Project_ATCS_Decorder_Module.c: 28:                 COUNT++;
  1484     00E8  3001               	movlw	1
  1485     00E9  00A0               	movwf	??_EEPROM_SELECT
  1486     00EA  0820               	movf	??_EEPROM_SELECT,w
  1487     00EB  07A4               	addwf	EEPROM_SELECT@COUNT,f
  1488                           
  1489                           ;Project_ATCS_Decorder_Module.c: 29:                 EEADR = EE_STORE.EE_ADRS++;
  1490     00EC  084F               	movf	_EE_STORE+3,w
  1491     00ED  0023               	movlb	3	; select bank3
  1492     00EE  0092               	movwf	18	;volatile
  1493     00EF  0020               	movlb	0	; select bank0
  1494     00F0  084E               	movf	_EE_STORE+2,w
  1495     00F1  0023               	movlb	3	; select bank3
  1496     00F2  0091               	movwf	17	;volatile
  1497     00F3  3001               	movlw	1
  1498     00F4  0020               	movlb	0	; select bank0
  1499     00F5  07CE               	addwf	_EE_STORE+2,f
  1500     00F6  3000               	movlw	0
  1501     00F7  3DCF               	addwfc	_EE_STORE+3,f
  1502                           
  1503                           ;Project_ATCS_Decorder_Module.c: 30:             }while(COUNT < 4);
  1504     00F8  3004               	movlw	4
  1505     00F9  0224               	subwf	EEPROM_SELECT@COUNT,w
  1506     00FA  1803               	btfsc	3,0
  1507     00FB  0008               	return
  1508     00FC  28C2               	goto	l1370
  1509     00FD                     l1388:
  1510                           
  1511                           ;Project_ATCS_Decorder_Module.c: 35:                 if(EE_STORE.EE_REPORT[COUNT]){
  1512     00FD  0824               	movf	EEPROM_SELECT@COUNT,w
  1513     00FE  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1514     00FF  0086               	movwf	6
  1515     0100  0187               	clrf	7
  1516     0101  0801               	movf	1,w
  1517     0102  1903               	btfsc	3,2
  1518     0103  2922               	goto	l1396
  1519                           
  1520                           ;Project_ATCS_Decorder_Module.c: 36:                     EEADR = EE_STORE.EE_ADRS;
  1521     0104  084F               	movf	_EE_STORE+3,w
  1522     0105  0023               	movlb	3	; select bank3
  1523     0106  0092               	movwf	18	;volatile
  1524     0107  0020               	movlb	0	; select bank0
  1525     0108  084E               	movf	_EE_STORE+2,w
  1526     0109  0023               	movlb	3	; select bank3
  1527     010A  0091               	movwf	17	;volatile
  1528                           
  1529                           ;Project_ATCS_Decorder_Module.c: 37:                     EECON1 = EE_STORE.EE_CONFIG;
  1530     010B  0020               	movlb	0	; select bank0
  1531     010C  084D               	movf	_EE_STORE+1,w
  1532     010D  0023               	movlb	3	; select bank3
  1533     010E  0095               	movwf	21	;volsfr
  1534                           
  1535                           ;Project_ATCS_Decorder_Module.c: 38:                     EECON1bits.RD = 1;
  1536     010F  1415               	bsf	21,0	;volsfr
  1537     0110                     l161:	
  1538                           ;Project_ATCS_Decorder_Module.c: 39:                     while (EECON1bits.RD);
  1539                           
  1540     0110  1815               	btfsc	21,0	;volsfr
  1541     0111  2910               	goto	l161
  1542                           
  1543                           ;Project_ATCS_Decorder_Module.c: 40:                     EE_STORE.EE_DATA[COUNT] = EEDAT
      +                          ;
  1544     0112  0020               	movlb	0	; select bank0
  1545     0113  3524               	lslf	EEPROM_SELECT@COUNT,w
  1546     0114  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1547     0115  0086               	movwf	6
  1548     0116  0187               	clrf	7
  1549     0117  0023               	movlb	3	; select bank3
  1550     0118  0813               	movf	19,w	;volatile
  1551     0119  3FC0               	movwi [0]fsr1
  1552     011A  0814               	movf	20,w	;volatile
  1553     011B  3FC1               	movwi [1]fsr1
  1554                           
  1555                           ;Project_ATCS_Decorder_Module.c: 41:                     EE_STORE.EE_REPORT[COUNT] = 0x0
      +                          0;
  1556     011C  0020               	movlb	0	; select bank0
  1557     011D  0824               	movf	EEPROM_SELECT@COUNT,w
  1558     011E  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1559     011F  0086               	movwf	6
  1560     0120  0187               	clrf	7
  1561     0121  0181               	clrf	1
  1562     0122                     l1396:
  1563                           
  1564                           ;Project_ATCS_Decorder_Module.c: 43:                 EE_STORE.EE_ADRS++;
  1565     0122  3001               	movlw	1
  1566     0123  07CE               	addwf	_EE_STORE+2,f
  1567     0124  3000               	movlw	0
  1568     0125  3DCF               	addwfc	_EE_STORE+3,f
  1569                           
  1570                           ;Project_ATCS_Decorder_Module.c: 44:             } while (COUNT < 4);
  1571     0126  3004               	movlw	4
  1572     0127  0224               	subwf	EEPROM_SELECT@COUNT,w
  1573     0128  1C03               	skipc
  1574     0129  28FD               	goto	l1388
  1575                           
  1576                           ;Project_ATCS_Decorder_Module.c: 45:             INTCONbits.GIE = 1;
  1577     012A  178B               	bsf	11,7	;volatile
  1578                           
  1579                           ;Project_ATCS_Decorder_Module.c: 46:             return;
  1580     012B  0008               	return
  1581     012C                     l165:	
  1582                           ;Project_ATCS_Decorder_Module.c: 48:         case EE_WRITE_UID:
  1583                           
  1584                           
  1585                           ;Project_ATCS_Decorder_Module.c: 49:             INTCONbits.GIE = 0;
  1586     012C  138B               	bcf	11,7	;volatile
  1587                           
  1588                           ;Project_ATCS_Decorder_Module.c: 50:             UnINT EE_SAVE = EE_STORE.EE_ADRS;
  1589     012D  084F               	movf	_EE_STORE+3,w
  1590     012E  00A3               	movwf	EEPROM_SELECT@EE_SAVE+1
  1591     012F  084E               	movf	_EE_STORE+2,w
  1592     0130  00A2               	movwf	EEPROM_SELECT@EE_SAVE
  1593     0131                     l1402:
  1594                           
  1595                           ;Project_ATCS_Decorder_Module.c: 52:                 if(EE_STORE.EE_REPORT[COUNT]){
  1596     0131  0824               	movf	EEPROM_SELECT@COUNT,w
  1597     0132  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1598     0133  0086               	movwf	6
  1599     0134  0187               	clrf	7
  1600     0135  0801               	movf	1,w
  1601     0136  1903               	btfsc	3,2
  1602     0137  2950               	goto	l1416
  1603                           
  1604                           ;Project_ATCS_Decorder_Module.c: 53:                     EEADR = EE_STORE.EE_ADRS;
  1605     0138  084F               	movf	_EE_STORE+3,w
  1606     0139  0023               	movlb	3	; select bank3
  1607     013A  0092               	movwf	18	;volatile
  1608     013B  0020               	movlb	0	; select bank0
  1609     013C  084E               	movf	_EE_STORE+2,w
  1610     013D  0023               	movlb	3	; select bank3
  1611     013E  0091               	movwf	17	;volatile
  1612                           
  1613                           ;Project_ATCS_Decorder_Module.c: 54:                     EEDAT = EE_STORE.EE_DATA[COUNT]
      +                          ;
  1614     013F  0020               	movlb	0	; select bank0
  1615     0140  3524               	lslf	EEPROM_SELECT@COUNT,w
  1616     0141  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1617     0142  0086               	movwf	6
  1618     0143  0187               	clrf	7
  1619     0144  3F40               	moviw [0]fsr1
  1620     0145  0023               	movlb	3	; select bank3
  1621     0146  0093               	movwf	19	;volatile
  1622     0147  3F41               	moviw [1]fsr1
  1623     0148  0094               	movwf	20	;volatile
  1624                           
  1625                           ;Project_ATCS_Decorder_Module.c: 55:                     EECON1 = 0x64;
  1626     0149  3064               	movlw	100
  1627     014A  0095               	movwf	21	;volsfr
  1628                           
  1629                           ;Project_ATCS_Decorder_Module.c: 56:                     EECON2 = 0x55;
  1630     014B  3055               	movlw	85
  1631     014C  0096               	movwf	22	;volsfr
  1632                           
  1633                           ;Project_ATCS_Decorder_Module.c: 57:                     EECON2 = 0xAA;
  1634     014D  30AA               	movlw	170
  1635     014E  0096               	movwf	22	;volsfr
  1636                           
  1637                           ;Project_ATCS_Decorder_Module.c: 58:                     EECON1bits.WR = 1;
  1638     014F  1495               	bsf	21,1	;volsfr
  1639     0150                     l1416:
  1640                           
  1641                           ;Project_ATCS_Decorder_Module.c: 60:                 COUNT++;
  1642     0150  3001               	movlw	1
  1643     0151  0020               	movlb	0	; select bank0
  1644     0152  00A0               	movwf	??_EEPROM_SELECT
  1645     0153  0820               	movf	??_EEPROM_SELECT,w
  1646     0154  07A4               	addwf	EEPROM_SELECT@COUNT,f
  1647                           
  1648                           ;Project_ATCS_Decorder_Module.c: 61:                 EE_STORE.EE_ADRS++;
  1649     0155  3001               	movlw	1
  1650     0156  07CE               	addwf	_EE_STORE+2,f
  1651     0157  3000               	movlw	0
  1652     0158  3DCF               	addwfc	_EE_STORE+3,f
  1653                           
  1654                           ;Project_ATCS_Decorder_Module.c: 62:             } while (COUNT < 4);
  1655     0159  3004               	movlw	4
  1656     015A  0224               	subwf	EEPROM_SELECT@COUNT,w
  1657     015B  1C03               	skipc
  1658     015C  2931               	goto	l1402
  1659                           
  1660                           ;Project_ATCS_Decorder_Module.c: 63:             EE_STORE.EE_ADRS = EE_SAVE;
  1661     015D  0823               	movf	EEPROM_SELECT@EE_SAVE+1,w
  1662     015E  00CF               	movwf	_EE_STORE+3
  1663     015F  0822               	movf	EEPROM_SELECT@EE_SAVE,w
  1664     0160  00CE               	movwf	_EE_STORE+2
  1665                           
  1666                           ;Project_ATCS_Decorder_Module.c: 65:             EECON1 = 0x44;
  1667     0161  3044               	movlw	68
  1668     0162  0023               	movlb	3	; select bank3
  1669     0163  0095               	movwf	21	;volsfr
  1670                           
  1671                           ;Project_ATCS_Decorder_Module.c: 66:             EECON2 = 0x55;
  1672     0164  3055               	movlw	85
  1673     0165  0096               	movwf	22	;volsfr
  1674                           
  1675                           ;Project_ATCS_Decorder_Module.c: 67:             EECON2 = 0xAA;
  1676     0166  30AA               	movlw	170
  1677     0167  0096               	movwf	22	;volsfr
  1678                           
  1679                           ;Project_ATCS_Decorder_Module.c: 69:             EECON1bits.WR = 1;
  1680     0168  1495               	bsf	21,1	;volsfr
  1681                           
  1682                           ;Project_ATCS_Decorder_Module.c: 70:             __nop();
  1683     0169  0000               	nop
  1684                           
  1685                           ;Project_ATCS_Decorder_Module.c: 71:             __nop();
  1686     016A  0000               	nop
  1687                           
  1688                           ;Project_ATCS_Decorder_Module.c: 72:             INTCONbits.GIE = 1;
  1689     016B  178B               	bsf	11,7	;volatile
  1690     016C  0008               	return
  1691     016D                     l169:	
  1692                           ;Project_ATCS_Decorder_Module.c: 75:         case EE_VERIFY_UID:
  1693                           
  1694                           
  1695                           ;Project_ATCS_Decorder_Module.c: 76:             INTCONbits.GIE = 0;
  1696     016D  138B               	bcf	11,7	;volatile
  1697     016E                     l1434:
  1698                           
  1699                           ;Project_ATCS_Decorder_Module.c: 78:                 if(EE_STORE.EE_REPORT[COUNT]){
  1700     016E  0824               	movf	EEPROM_SELECT@COUNT,w
  1701     016F  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1702     0170  0086               	movwf	6
  1703     0171  0187               	clrf	7
  1704     0172  0801               	movf	1,w
  1705     0173  1903               	btfsc	3,2
  1706     0174  29A1               	goto	l1444
  1707                           
  1708                           ;Project_ATCS_Decorder_Module.c: 79:                     EEADR = EE_STORE.EE_ADRS;
  1709     0175  084F               	movf	_EE_STORE+3,w
  1710     0176  0023               	movlb	3	; select bank3
  1711     0177  0092               	movwf	18	;volatile
  1712     0178  0020               	movlb	0	; select bank0
  1713     0179  084E               	movf	_EE_STORE+2,w
  1714     017A  0023               	movlb	3	; select bank3
  1715     017B  0091               	movwf	17	;volatile
  1716                           
  1717                           ;Project_ATCS_Decorder_Module.c: 80:                     EECON1 = 0x41;
  1718     017C  3041               	movlw	65
  1719     017D  0095               	movwf	21	;volsfr
  1720     017E                     l172:	
  1721                           ;Project_ATCS_Decorder_Module.c: 81:                     while (EECON1bits.RD);
  1722                           
  1723     017E  1815               	btfsc	21,0	;volsfr
  1724     017F  297E               	goto	l172
  1725                           
  1726                           ;Project_ATCS_Decorder_Module.c: 82:                     if (EEDAT != EE_STORE.EE_DATA[C
      +                          OUNT]) {
  1727     0180  0020               	movlb	0	; select bank0
  1728     0181  3524               	lslf	EEPROM_SELECT@COUNT,w
  1729     0182  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1730     0183  0086               	movwf	6
  1731     0184  0187               	clrf	7
  1732     0185  3F40               	moviw [0]fsr1
  1733     0186  00A0               	movwf	??_EEPROM_SELECT
  1734     0187  3F41               	moviw [1]fsr1
  1735     0188  00A1               	movwf	??_EEPROM_SELECT+1
  1736     0189  0023               	movlb	3	; select bank3
  1737     018A  0814               	movf	20,w	;volatile
  1738     018B  0020               	movlb	0	; select bank0
  1739     018C  0621               	xorwf	??_EEPROM_SELECT+1,w
  1740     018D  1D03               	skipz
  1741     018E  2993               	goto	u695
  1742     018F  0023               	movlb	3	; select bank3
  1743     0190  0813               	movf	19,w	;volatile
  1744     0191  0020               	movlb	0	; select bank0
  1745     0192  0620               	xorwf	??_EEPROM_SELECT,w
  1746     0193                     u695:
  1747     0193  1903               	skipnz
  1748     0194  299C               	goto	l1442
  1749                           
  1750                           ;Project_ATCS_Decorder_Module.c: 83:                         EE_STORE.EE_REPORT[COUNT] =
      +                           0xFF;
  1751     0195  0824               	movf	EEPROM_SELECT@COUNT,w
  1752     0196  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1753     0197  0086               	movwf	6
  1754     0198  0187               	clrf	7
  1755     0199  30FF               	movlw	255
  1756     019A  0081               	movwf	1
  1757                           
  1758                           ;Project_ATCS_Decorder_Module.c: 84:                     } else {
  1759     019B  29A1               	goto	l1444
  1760     019C                     l1442:
  1761                           
  1762                           ;Project_ATCS_Decorder_Module.c: 85:                         EE_STORE.EE_REPORT[COUNT] =
      +                           0x00;
  1763     019C  0824               	movf	EEPROM_SELECT@COUNT,w
  1764     019D  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1765     019E  0086               	movwf	6
  1766     019F  0187               	clrf	7
  1767     01A0  0181               	clrf	1
  1768     01A1                     l1444:
  1769                           
  1770                           ;Project_ATCS_Decorder_Module.c: 88:                 COUNT++;
  1771     01A1  3001               	movlw	1
  1772     01A2  00A0               	movwf	??_EEPROM_SELECT
  1773     01A3  0820               	movf	??_EEPROM_SELECT,w
  1774     01A4  07A4               	addwf	EEPROM_SELECT@COUNT,f
  1775                           
  1776                           ;Project_ATCS_Decorder_Module.c: 89:                 EE_STORE.EE_ADRS++;
  1777     01A5  3001               	movlw	1
  1778     01A6  07CE               	addwf	_EE_STORE+2,f
  1779     01A7  3000               	movlw	0
  1780     01A8  3DCF               	addwfc	_EE_STORE+3,f
  1781                           
  1782                           ;Project_ATCS_Decorder_Module.c: 90:             } while (COUNT < 4);
  1783     01A9  3004               	movlw	4
  1784     01AA  0224               	subwf	EEPROM_SELECT@COUNT,w
  1785     01AB  1C03               	skipc
  1786     01AC  296E               	goto	l1434
  1787                           
  1788                           ;Project_ATCS_Decorder_Module.c: 91:             INTCONbits.GIE = 1;
  1789     01AD  178B               	bsf	11,7	;volatile
  1790                           
  1791                           ;Project_ATCS_Decorder_Module.c: 92:             return;
  1792     01AE  0008               	return
  1793     01AF                     l1450:
  1794                           
  1795                           ;Project_ATCS_Decorder_Module.c: 96:                 if(EE_STORE.EE_REPORT[COUNT]){
  1796     01AF  0824               	movf	EEPROM_SELECT@COUNT,w
  1797     01B0  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1798     01B1  0086               	movwf	6
  1799     01B2  0187               	clrf	7
  1800     01B3  0801               	movf	1,w
  1801     01B4  1903               	btfsc	3,2
  1802     01B5  29D2               	goto	l1472
  1803                           
  1804                           ;Project_ATCS_Decorder_Module.c: 97:                     EEADR = EE_STORE.EE_ADRS;
  1805     01B6  084F               	movf	_EE_STORE+3,w
  1806     01B7  0023               	movlb	3	; select bank3
  1807     01B8  0092               	movwf	18	;volatile
  1808     01B9  0020               	movlb	0	; select bank0
  1809     01BA  084E               	movf	_EE_STORE+2,w
  1810     01BB  0023               	movlb	3	; select bank3
  1811     01BC  0091               	movwf	17	;volatile
  1812                           
  1813                           ;Project_ATCS_Decorder_Module.c: 98:                     EEDAT = EE_STORE.EE_DATA[COUNT]
      +                          ;
  1814     01BD  0020               	movlb	0	; select bank0
  1815     01BE  3524               	lslf	EEPROM_SELECT@COUNT,w
  1816     01BF  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1817     01C0  0086               	movwf	6
  1818     01C1  0187               	clrf	7
  1819     01C2  3F40               	moviw [0]fsr1
  1820     01C3  0023               	movlb	3	; select bank3
  1821     01C4  0093               	movwf	19	;volatile
  1822     01C5  3F41               	moviw [1]fsr1
  1823     01C6  0094               	movwf	20	;volatile
  1824                           
  1825                           ;Project_ATCS_Decorder_Module.c: 99:                     EECON1 = 0x44;
  1826     01C7  3044               	movlw	68
  1827     01C8  0095               	movwf	21	;volsfr
  1828                           
  1829                           ;Project_ATCS_Decorder_Module.c: 100:                     EECON2 = 0x55;
  1830     01C9  3055               	movlw	85
  1831     01CA  0096               	movwf	22	;volsfr
  1832                           
  1833                           ;Project_ATCS_Decorder_Module.c: 101:                     EECON2 = 0xAA;
  1834     01CB  30AA               	movlw	170
  1835     01CC  0096               	movwf	22	;volsfr
  1836                           
  1837                           ;Project_ATCS_Decorder_Module.c: 102:                     EECON1bits.WR = 1;
  1838     01CD  1495               	bsf	21,1	;volsfr
  1839                           
  1840                           ;Project_ATCS_Decorder_Module.c: 103:                     __nop();
  1841     01CE  0000               	nop
  1842                           
  1843                           ;Project_ATCS_Decorder_Module.c: 104:                     __nop();
  1844     01CF  0000               	nop
  1845                           
  1846                           ;Project_ATCS_Decorder_Module.c: 105:                     INTCONbits.GIE = 1;
  1847     01D0  178B               	bsf	11,7	;volatile
  1848     01D1  0008               	return
  1849     01D2                     l1472:
  1850                           
  1851                           ;Project_ATCS_Decorder_Module.c: 108:                 COUNT++;
  1852     01D2  3001               	movlw	1
  1853     01D3  00A0               	movwf	??_EEPROM_SELECT
  1854     01D4  0820               	movf	??_EEPROM_SELECT,w
  1855     01D5  07A4               	addwf	EEPROM_SELECT@COUNT,f
  1856                           
  1857                           ;Project_ATCS_Decorder_Module.c: 109:                 EEADR = EE_STORE.EE_ADRS++;
  1858     01D6  084F               	movf	_EE_STORE+3,w
  1859     01D7  0023               	movlb	3	; select bank3
  1860     01D8  0092               	movwf	18	;volatile
  1861     01D9  0020               	movlb	0	; select bank0
  1862     01DA  084E               	movf	_EE_STORE+2,w
  1863     01DB  0023               	movlb	3	; select bank3
  1864     01DC  0091               	movwf	17	;volatile
  1865     01DD  3001               	movlw	1
  1866     01DE  0020               	movlb	0	; select bank0
  1867     01DF  07CE               	addwf	_EE_STORE+2,f
  1868     01E0  3000               	movlw	0
  1869     01E1  3DCF               	addwfc	_EE_STORE+3,f
  1870                           
  1871                           ;Project_ATCS_Decorder_Module.c: 110:             }while(COUNT < 4);
  1872     01E2  3004               	movlw	4
  1873     01E3  0224               	subwf	EEPROM_SELECT@COUNT,w
  1874     01E4  1C03               	skipc
  1875     01E5  29AF               	goto	l1450
  1876                           
  1877                           ;Project_ATCS_Decorder_Module.c: 111:             INTCONbits.GIE = 1;
  1878     01E6  178B               	bsf	11,7	;volatile
  1879                           
  1880                           ;Project_ATCS_Decorder_Module.c: 112:             return;
  1881     01E7  0008               	return
  1882     01E8                     l1480:
  1883                           
  1884                           ;Project_ATCS_Decorder_Module.c: 116:                 if(EE_STORE.EE_REPORT[COUNT]){
  1885     01E8  0824               	movf	EEPROM_SELECT@COUNT,w
  1886     01E9  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1887     01EA  0086               	movwf	6
  1888     01EB  0187               	clrf	7
  1889     01EC  0801               	movf	1,w
  1890     01ED  1903               	btfsc	3,2
  1891     01EE  2A26               	goto	l1492
  1892                           
  1893                           ;Project_ATCS_Decorder_Module.c: 117:                     EEADR = EE_STORE.EE_ADRS;
  1894     01EF  084F               	movf	_EE_STORE+3,w
  1895     01F0  0023               	movlb	3	; select bank3
  1896     01F1  0092               	movwf	18	;volatile
  1897     01F2  0020               	movlb	0	; select bank0
  1898     01F3  084E               	movf	_EE_STORE+2,w
  1899     01F4  0023               	movlb	3	; select bank3
  1900     01F5  0091               	movwf	17	;volatile
  1901                           
  1902                           ;Project_ATCS_Decorder_Module.c: 118:                     EECON1 = 0x01;
  1903     01F6  3001               	movlw	1
  1904     01F7  0095               	movwf	21	;volsfr
  1905     01F8                     l185:	
  1906                           ;Project_ATCS_Decorder_Module.c: 119:                     while (EECON1bits.RD);
  1907                           
  1908     01F8  1815               	btfsc	21,0	;volsfr
  1909     01F9  29F8               	goto	l185
  1910                           
  1911                           ;Project_ATCS_Decorder_Module.c: 120:                     EE_STORE.EE_DATA[COUNT] = EEDA
      +                          T;
  1912     01FA  0020               	movlb	0	; select bank0
  1913     01FB  3524               	lslf	EEPROM_SELECT@COUNT,w
  1914     01FC  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1915     01FD  0086               	movwf	6
  1916     01FE  0187               	clrf	7
  1917     01FF  0023               	movlb	3	; select bank3
  1918     0200  0813               	movf	19,w	;volatile
  1919     0201  3FC0               	movwi [0]fsr1
  1920     0202  0814               	movf	20,w	;volatile
  1921     0203  3FC1               	movwi [1]fsr1
  1922                           
  1923                           ;Project_ATCS_Decorder_Module.c: 121:                     if (EEDAT != EE_STORE.EE_DATA[
      +                          COUNT]) {
  1924     0204  0020               	movlb	0	; select bank0
  1925     0205  3524               	lslf	EEPROM_SELECT@COUNT,w
  1926     0206  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  1927     0207  0086               	movwf	6
  1928     0208  0187               	clrf	7
  1929     0209  3F40               	moviw [0]fsr1
  1930     020A  00A0               	movwf	??_EEPROM_SELECT
  1931     020B  3F41               	moviw [1]fsr1
  1932     020C  00A1               	movwf	??_EEPROM_SELECT+1
  1933     020D  0023               	movlb	3	; select bank3
  1934     020E  0814               	movf	20,w	;volatile
  1935     020F  0020               	movlb	0	; select bank0
  1936     0210  0621               	xorwf	??_EEPROM_SELECT+1,w
  1937     0211  1D03               	skipz
  1938     0212  2A17               	goto	u755
  1939     0213  0023               	movlb	3	; select bank3
  1940     0214  0813               	movf	19,w	;volatile
  1941     0215  0020               	movlb	0	; select bank0
  1942     0216  0620               	xorwf	??_EEPROM_SELECT,w
  1943     0217                     u755:
  1944     0217  1903               	skipnz
  1945     0218  2A20               	goto	l1488
  1946                           
  1947                           ;Project_ATCS_Decorder_Module.c: 122:                         EE_STORE.EE_REPORT[COUNT] 
      +                          = 0xFF;
  1948     0219  0824               	movf	EEPROM_SELECT@COUNT,w
  1949     021A  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1950     021B  0086               	movwf	6
  1951     021C  0187               	clrf	7
  1952     021D  30FF               	movlw	255
  1953     021E  0081               	movwf	1
  1954                           
  1955                           ;Project_ATCS_Decorder_Module.c: 123:                     } else {
  1956     021F  0008               	return
  1957     0220                     l1488:
  1958                           
  1959                           ;Project_ATCS_Decorder_Module.c: 124:                         EE_STORE.EE_REPORT[COUNT] 
      +                          = 0x00;
  1960     0220  0824               	movf	EEPROM_SELECT@COUNT,w
  1961     0221  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  1962     0222  0086               	movwf	6
  1963     0223  0187               	clrf	7
  1964     0224  0181               	clrf	1
  1965     0225  0008               	return
  1966     0226                     l1492:
  1967                           
  1968                           ;Project_ATCS_Decorder_Module.c: 128:                 COUNT++;
  1969     0226  3001               	movlw	1
  1970     0227  00A0               	movwf	??_EEPROM_SELECT
  1971     0228  0820               	movf	??_EEPROM_SELECT,w
  1972     0229  07A4               	addwf	EEPROM_SELECT@COUNT,f
  1973                           
  1974                           ;Project_ATCS_Decorder_Module.c: 129:                 EEADR = EE_STORE.EE_ADRS++;
  1975     022A  084F               	movf	_EE_STORE+3,w
  1976     022B  0023               	movlb	3	; select bank3
  1977     022C  0092               	movwf	18	;volatile
  1978     022D  0020               	movlb	0	; select bank0
  1979     022E  084E               	movf	_EE_STORE+2,w
  1980     022F  0023               	movlb	3	; select bank3
  1981     0230  0091               	movwf	17	;volatile
  1982     0231  3001               	movlw	1
  1983     0232  0020               	movlb	0	; select bank0
  1984     0233  07CE               	addwf	_EE_STORE+2,f
  1985     0234  3000               	movlw	0
  1986     0235  3DCF               	addwfc	_EE_STORE+3,f
  1987                           
  1988                           ;Project_ATCS_Decorder_Module.c: 130:             }while(COUNT < 4);
  1989     0236  3004               	movlw	4
  1990     0237  0224               	subwf	EEPROM_SELECT@COUNT,w
  1991     0238  1C03               	skipc
  1992     0239  29E8               	goto	l1480
  1993                           
  1994                           ;Project_ATCS_Decorder_Module.c: 131:             INTCONbits.GIE = 1;
  1995     023A  178B               	bsf	11,7	;volatile
  1996                           
  1997                           ;Project_ATCS_Decorder_Module.c: 132:             return;
  1998     023B  0008               	return
  1999     023C                     l1502:
  2000     023C  084C               	movf	_EE_STORE,w
  2001     023D  00A0               	movwf	??_EEPROM_SELECT
  2002     023E  01A1               	clrf	??_EEPROM_SELECT+1
  2003                           
  2004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2005                           ; Switch size 1, requested type "simple"
  2006                           ; Number of cases is 1, Range of values is 0 to 0
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte            4     3 (average)
  2010                           ; direct_byte            8     6 (fixed)
  2011                           ; jumptable            260     6 (fixed)
  2012                           ;	Chosen strategy is simple_byte
  2013     023F  0821               	movf	??_EEPROM_SELECT+1,w
  2014     0240  3A00               	xorlw	0	; case 0
  2015     0241  1903               	skipnz
  2016     0242  2A44               	goto	l1940
  2017     0243  2A58               	goto	l156
  2018     0244                     l1940:
  2019                           
  2020                           ; Switch size 1, requested type "simple"
  2021                           ; Number of cases is 6, Range of values is 0 to 5
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; direct_byte           18     6 (fixed)
  2025                           ; simple_byte           19    10 (average)
  2026                           ; jumptable            260     6 (fixed)
  2027                           ;	Chosen strategy is simple_byte
  2028     0244  0820               	movf	??_EEPROM_SELECT,w
  2029     0245  3A00               	xorlw	0	; case 0
  2030     0246  1903               	skipnz
  2031     0247  28C2               	goto	l1370
  2032     0248  3A01               	xorlw	1	; case 1
  2033     0249  1903               	skipnz
  2034     024A  28FD               	goto	l1388
  2035     024B  3A03               	xorlw	3	; case 2
  2036     024C  1903               	skipnz
  2037     024D  292C               	goto	l165
  2038     024E  3A01               	xorlw	1	; case 3
  2039     024F  1903               	skipnz
  2040     0250  296D               	goto	l169
  2041     0251  3A07               	xorlw	7	; case 4
  2042     0252  1903               	skipnz
  2043     0253  29AF               	goto	l1450
  2044     0254  3A01               	xorlw	1	; case 5
  2045     0255  1903               	skipnz
  2046     0256  29E8               	goto	l1480
  2047     0257  2A58               	goto	l156
  2048     0258                     l156:
  2049     0258  0008               	return
  2050     0259                     __end_of_EEPROM_SELECT:
  2051                           
  2052                           	psect	intentry
  2053     0004                     __pintentry:	
  2054 ;; *************** function _isr *****************
  2055 ;; Defined at:
  2056 ;;		line 15 in file "Project_ATCS_Decorder_INTERRUPT.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  COUNT           2    6[COMMON] unsigned short 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0
  2070 ;;      Params:         0       0
  2071 ;;      Locals:         2       0
  2072 ;;      Temps:          1       0
  2073 ;;      Totals:         3       0
  2074 ;;Total ram usage:        3 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 1
  2077 ;; This function calls:
  2078 ;;		i1_EEPROM_SELECT
  2079 ;; This function is called by:
  2080 ;;		Interrupt level 1
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084     0004                     _isr:
  2085                           
  2086                           ;incstack = 0
  2087     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2088                           
  2089                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2090     0005  3180               	pagesel	$
  2091                           
  2092                           ;Project_ATCS_Decorder_INTERRUPT.c: 18:     if(INTCONbits.IOCIF){
  2093     0006  1C0B               	btfss	11,0	;volatile
  2094     0007  2892               	goto	i1l97
  2095                           
  2096                           ;Project_ATCS_Decorder_INTERRUPT.c: 19:         COUNT = TMR1;
  2097     0008  0020               	movlb	0	; select bank0
  2098     0009  0817               	movf	23,w	;volatile
  2099     000A  00F7               	movwf	isr@COUNT+1
  2100     000B  0816               	movf	22,w	;volatile
  2101     000C  00F6               	movwf	isr@COUNT
  2102                           
  2103                           ;Project_ATCS_Decorder_INTERRUPT.c: 20:         TMR1 = 0x00;
  2104     000D  0196               	clrf	22	;volatile
  2105     000E  0197               	clrf	23	;volatile
  2106                           
  2107                           ;Project_ATCS_Decorder_INTERRUPT.c: 21:         IOCAF = 0x00;
  2108     000F  0027               	movlb	7	; select bank7
  2109     0010  0193               	clrf	19	;volatile
  2110                           
  2111                           ;Project_ATCS_Decorder_INTERRUPT.c: 23:         if(!(COM_FLAG & 0x01)){
  2112     0011  0020               	movlb	0	; select bank0
  2113     0012  185D               	btfsc	_COM_FLAG,0
  2114     0013  283E               	goto	i1l98
  2115                           
  2116                           ;Project_ATCS_Decorder_INTERRUPT.c: 24:             if(COUNT >= 0x00C0 && COUNT <= 0x010
      +                          0 && !(COM_FLAG & 0x02) ){
  2117     0014  3000               	movlw	0
  2118     0015  0277               	subwf	isr@COUNT+1,w
  2119     0016  30C0               	movlw	192
  2120     0017  1903               	skipnz
  2121     0018  0276               	subwf	isr@COUNT,w
  2122     0019  1C03               	skipc
  2123     001A  2828               	goto	i1l1780
  2124     001B  3001               	movlw	1
  2125     001C  0277               	subwf	isr@COUNT+1,w
  2126     001D  3001               	movlw	1
  2127     001E  1903               	skipnz
  2128     001F  0276               	subwf	isr@COUNT,w
  2129     0020  1C03               	btfss	3,0
  2130     0021  18DD               	btfsc	_COM_FLAG,1
  2131     0022  2828               	goto	i1l1780
  2132     0023                     i1l1778:
  2133                           
  2134                           ;Project_ATCS_Decorder_INTERRUPT.c: 25:                 COUNTER++;
  2135     0023  3001               	movlw	1
  2136     0024  00F5               	movwf	??_isr
  2137     0025  0875               	movf	??_isr,w
  2138     0026  07F8               	addwf	_COUNTER,f
  2139                           
  2140                           ;Project_ATCS_Decorder_INTERRUPT.c: 26:             }
  2141     0027  28AA               	goto	i1l124
  2142     0028                     i1l1780:
  2143     0028  3000               	movlw	0
  2144     0029  0277               	subwf	isr@COUNT+1,w
  2145     002A  3081               	movlw	129
  2146     002B  1903               	skipnz
  2147     002C  0276               	subwf	isr@COUNT,w
  2148     002D  1803               	skipnc
  2149     002E  2831               	goto	i1l1784
  2150     002F  1CDD               	btfss	_COM_FLAG,1
  2151     0030  28AA               	goto	i1l124
  2152     0031                     i1l1784:
  2153                           
  2154                           ;Project_ATCS_Decorder_INTERRUPT.c: 29:                 if(COUNTER > 11){
  2155     0031  300C               	movlw	12
  2156     0032  0278               	subwf	_COUNTER,w
  2157     0033  1C03               	skipc
  2158     0034  28AA               	goto	i1l124
  2159                           
  2160                           ;Project_ATCS_Decorder_INTERRUPT.c: 30:                     COM_FLAG = COM_FLAG | 0x01;
  2161     0035  085D               	movf	_COM_FLAG,w
  2162     0036  3801               	iorlw	1
  2163     0037  00DD               	movwf	_COM_FLAG
  2164                           
  2165                           ;Project_ATCS_Decorder_INTERRUPT.c: 31:                     COM_FLAG = COM_FLAG & 0xFD;
  2166     0038  085D               	movf	_COM_FLAG,w
  2167     0039  39FD               	andlw	253
  2168     003A  00DD               	movwf	_COM_FLAG
  2169                           
  2170                           ;Project_ATCS_Decorder_INTERRUPT.c: 32:                     COUNTER = 0x00;
  2171     003B  01F8               	clrf	_COUNTER
  2172                           
  2173                           ;Project_ATCS_Decorder_INTERRUPT.c: 33:                     DATA = 0x00;
  2174     003C  01F9               	clrf	_DATA
  2175     003D  28AA               	goto	i1l124
  2176     003E                     i1l98:
  2177     003E  1C5D               	btfss	_COM_FLAG,0
  2178     003F  28AA               	goto	i1l124
  2179                           
  2180                           ;Project_ATCS_Decorder_INTERRUPT.c: 38:             if(COUNTER < 8 ){
  2181     0040  3008               	movlw	8
  2182     0041  0278               	subwf	_COUNTER,w
  2183     0042  1803               	skipnc
  2184     0043  2863               	goto	i1l1808
  2185                           
  2186                           ;Project_ATCS_Decorder_INTERRUPT.c: 39:                 if(COUNT >= 0x00C0 && COUNT <= 0
      +                          x0100 && !(COM_FLAG & 0x02)){
  2187     0044  3000               	movlw	0
  2188     0045  0277               	subwf	isr@COUNT+1,w
  2189     0046  30C0               	movlw	192
  2190     0047  1903               	skipnz
  2191     0048  0276               	subwf	isr@COUNT,w
  2192     0049  1C03               	skipc
  2193     004A  2856               	goto	i1l1802
  2194     004B  3001               	movlw	1
  2195     004C  0277               	subwf	isr@COUNT+1,w
  2196     004D  3001               	movlw	1
  2197     004E  1903               	skipnz
  2198     004F  0276               	subwf	isr@COUNT,w
  2199     0050  1C03               	btfss	3,0
  2200     0051  18DD               	btfsc	_COM_FLAG,1
  2201     0052  2856               	goto	i1l1802
  2202                           
  2203                           ;Project_ATCS_Decorder_INTERRUPT.c: 40:                     DATA = (UnCHR) (DATA << 1) |
      +                           0x01;
  2204     0053  1403               	setc
  2205     0054  0DF9               	rlf	_DATA,f
  2206                           
  2207                           ;Project_ATCS_Decorder_INTERRUPT.c: 41:                 }else if(COUNT > 0x0080 || COM_F
      +                          LAG & 0x02){
  2208     0055  2823               	goto	i1l1778
  2209     0056                     i1l1802:
  2210     0056  3000               	movlw	0
  2211     0057  0277               	subwf	isr@COUNT+1,w
  2212     0058  3081               	movlw	129
  2213     0059  1903               	skipnz
  2214     005A  0276               	subwf	isr@COUNT,w
  2215     005B  1803               	skipnc
  2216     005C  285F               	goto	i1l1806
  2217     005D  1CDD               	btfss	_COM_FLAG,1
  2218     005E  2823               	goto	i1l1778
  2219     005F                     i1l1806:
  2220                           
  2221                           ;Project_ATCS_Decorder_INTERRUPT.c: 42:                     DATA = (UnCHR) (DATA << 1) &
      +                           0xFE;
  2222     005F  3579               	lslf	_DATA,w
  2223     0060  39FE               	andlw	254
  2224     0061  00F9               	movwf	_DATA
  2225     0062  2823               	goto	i1l1778
  2226     0063                     i1l1808:
  2227                           
  2228                           ;Project_ATCS_Decorder_INTERRUPT.c: 47:                 if(COUNT >= 0x00C0 && COUNT <= 0
      +                          x0100 && !(COM_FLAG & 0x02)){
  2229     0063  3000               	movlw	0
  2230     0064  0277               	subwf	isr@COUNT+1,w
  2231     0065  30C0               	movlw	192
  2232     0066  1903               	skipnz
  2233     0067  0276               	subwf	isr@COUNT,w
  2234     0068  1C03               	skipc
  2235     0069  287F               	goto	i1l1820
  2236     006A  3001               	movlw	1
  2237     006B  0277               	subwf	isr@COUNT+1,w
  2238     006C  3001               	movlw	1
  2239     006D  1903               	skipnz
  2240     006E  0276               	subwf	isr@COUNT,w
  2241     006F  1C03               	btfss	3,0
  2242     0070  18DD               	btfsc	_COM_FLAG,1
  2243     0071  287F               	goto	i1l1820
  2244                           
  2245                           ;Project_ATCS_Decorder_INTERRUPT.c: 48:                     STACK[STCR] = DATA;
  2246     0072  085C               	movf	_STCR,w
  2247     0073  3EA0               	addlw	160
  2248     0074  0086               	movwf	6
  2249     0075  0187               	clrf	7
  2250     0076  0879               	movf	_DATA,w
  2251     0077  0081               	movwf	1
  2252                           
  2253                           ;Project_ATCS_Decorder_INTERRUPT.c: 49:                     COM_FLAG = COM_FLAG | 0x04;
  2254     0078  085D               	movf	_COM_FLAG,w
  2255     0079  3804               	iorlw	4
  2256     007A  00DD               	movwf	_COM_FLAG
  2257                           
  2258                           ;Project_ATCS_Decorder_INTERRUPT.c: 50:                     COM_FLAG = COM_FLAG & 0xFE;
  2259     007B  085D               	movf	_COM_FLAG,w
  2260     007C  39FE               	andlw	254
  2261     007D  00DD               	movwf	_COM_FLAG
  2262                           
  2263                           ;Project_ATCS_Decorder_INTERRUPT.c: 51:                 }else{
  2264     007E  2890               	goto	i1l1830
  2265     007F                     i1l1820:
  2266                           
  2267                           ;Project_ATCS_Decorder_INTERRUPT.c: 52:                     if(STCR == 32){
  2268     007F  3020               	movlw	32
  2269     0080  065C               	xorwf	_STCR,w
  2270     0081  1903               	btfsc	3,2
  2271                           
  2272                           ;Project_ATCS_Decorder_INTERRUPT.c: 53:                         STCR = 0;
  2273     0082  01DC               	clrf	_STCR
  2274                           
  2275                           ;Project_ATCS_Decorder_INTERRUPT.c: 55:                     STACK[STCR] = DATA;
  2276     0083  085C               	movf	_STCR,w
  2277     0084  3EA0               	addlw	160
  2278     0085  0086               	movwf	6
  2279     0086  0187               	clrf	7
  2280     0087  0879               	movf	_DATA,w
  2281     0088  0081               	movwf	1
  2282                           
  2283                           ;Project_ATCS_Decorder_INTERRUPT.c: 56:                     COM_FLAG = COM_FLAG & 0xFB;
  2284     0089  085D               	movf	_COM_FLAG,w
  2285     008A  39FB               	andlw	251
  2286     008B  00DD               	movwf	_COM_FLAG
  2287                           
  2288                           ;Project_ATCS_Decorder_INTERRUPT.c: 57:                     STCR++;
  2289     008C  3001               	movlw	1
  2290     008D  00F5               	movwf	??_isr
  2291     008E  0875               	movf	??_isr,w
  2292     008F  07DC               	addwf	_STCR,f
  2293     0090                     i1l1830:
  2294                           
  2295                           ;Project_ATCS_Decorder_INTERRUPT.c: 59:                 COUNTER = 0x00;
  2296     0090  01F8               	clrf	_COUNTER
  2297                           
  2298                           ;Project_ATCS_Decorder_INTERRUPT.c: 62:     }else if(PIR1bits.TMR1IF){
  2299     0091  28AA               	goto	i1l124
  2300     0092                     i1l97:
  2301     0092  0020               	movlb	0	; select bank0
  2302     0093  1C11               	btfss	17,0	;volatile
  2303     0094  289A               	goto	i1l118
  2304                           
  2305                           ;Project_ATCS_Decorder_INTERRUPT.c: 63:         PIR1 = 0x00;
  2306     0095  0191               	clrf	17	;volatile
  2307                           
  2308                           ;Project_ATCS_Decorder_INTERRUPT.c: 64:         COM_FLAG = COM_FLAG | 0x02;
  2309     0096  085D               	movf	_COM_FLAG,w
  2310     0097  3802               	iorlw	2
  2311     0098  00DD               	movwf	_COM_FLAG
  2312                           
  2313                           ;Project_ATCS_Decorder_INTERRUPT.c: 65:     }else if(PIR2bits.EEIF){
  2314     0099  28AA               	goto	i1l124
  2315     009A                     i1l118:
  2316     009A  1E12               	btfss	18,4	;volatile
  2317     009B  28AA               	goto	i1l124
  2318                           
  2319                           ;Project_ATCS_Decorder_INTERRUPT.c: 66:         PIR2bits.EEIF = 0;
  2320     009C  1212               	bcf	18,4	;volatile
  2321                           
  2322                           ;Project_ATCS_Decorder_INTERRUPT.c: 67:         if(EE_STORE.EE_STATE == EE_WRITE_UID){
  2323     009D  3002               	movlw	2
  2324     009E  064C               	xorwf	_EE_STORE,w
  2325     009F  1D03               	btfss	3,2
  2326     00A0  28A3               	goto	i1l1842
  2327                           
  2328                           ;Project_ATCS_Decorder_INTERRUPT.c: 68:             EE_STORE.EE_STATE = EE_VERIFY_UID;
  2329     00A1  3003               	movlw	3
  2330     00A2  28A8               	goto	L1
  2331     00A3                     i1l1842:	
  2332                           ;Project_ATCS_Decorder_INTERRUPT.c: 69:         }else if(EE_STORE.EE_STATE == EE_WRITE_R
      +                          OM){
  2333                           
  2334     00A3  3004               	movlw	4
  2335     00A4  064C               	xorwf	_EE_STORE,w
  2336     00A5  1D03               	btfss	3,2
  2337     00A6  28A9               	goto	i1l1846
  2338                           
  2339                           ;Project_ATCS_Decorder_INTERRUPT.c: 70:             EE_STORE.EE_STATE = EE_VERIFY_ROM;
  2340     00A7  3005               	movlw	5
  2341     00A8                     L1:
  2342     00A8  00CC               	movwf	_EE_STORE
  2343     00A9                     i1l1846:
  2344                           
  2345                           ;Project_ATCS_Decorder_INTERRUPT.c: 72:         EEPROM_SELECT();
  2346     00A9  2259               	fcall	i1_EEPROM_SELECT
  2347     00AA                     i1l124:
  2348     00AA  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2349     00AB  0009               	retfie
  2350     00AC                     __end_of_isr:
  2351                           
  2352                           	psect	text6
  2353     0259                     __ptext6:	
  2354 ;; *************** function i1_EEPROM_SELECT *****************
  2355 ;; Defined at:
  2356 ;;		line 12 in file "Project_ATCS_Decorder_Module.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  EE_SAVE         2    2[COMMON] unsigned int 
  2361 ;;  COUNT           1    4[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0
  2371 ;;      Params:         0       0
  2372 ;;      Locals:         3       0
  2373 ;;      Temps:          2       0
  2374 ;;      Totals:         5       0
  2375 ;;Total ram usage:        5 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_isr
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384     0259                     i1_EEPROM_SELECT:	
  2385                           ;psect for function i1_EEPROM_SELECT
  2386                           
  2387                           
  2388                           ;Project_ATCS_Decorder_Module.c: 13:     INTCONbits.GIE = 0;
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in i1_EEPROM_SELECT: [wreg-fsr1h+status,2+status,0]
  2392     0259  138B               	bcf	11,7	;volatile
  2393                           
  2394                           ;Project_ATCS_Decorder_Module.c: 14:     UnCHR COUNT = 0x00 ;
  2395     025A  01F4               	clrf	i1EEPROM_SELECT@COUNT
  2396                           
  2397                           ;Project_ATCS_Decorder_Module.c: 16:     switch (EE_STORE.EE_STATE) {
  2398     025B  2BC2               	goto	i1l1676
  2399     025C                     i1l1544:
  2400                           
  2401                           ;Project_ATCS_Decorder_Module.c: 19:                 if(EE_STORE.EE_REPORT[COUNT]){
  2402     025C  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2403     025D  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2404     025E  0086               	movwf	6
  2405     025F  0187               	clrf	7
  2406     0260  0801               	movf	1,w
  2407     0261  1903               	btfsc	3,2
  2408     0262  2A7F               	goto	i1l1554
  2409                           
  2410                           ;Project_ATCS_Decorder_Module.c: 20:                     EEADR = EE_STORE.EE_ADRS;
  2411     0263  084F               	movf	_EE_STORE+3,w
  2412     0264  0023               	movlb	3	; select bank3
  2413     0265  0092               	movwf	18	;volatile
  2414     0266  0020               	movlb	0	; select bank0
  2415     0267  084E               	movf	_EE_STORE+2,w
  2416     0268  0023               	movlb	3	; select bank3
  2417     0269  0091               	movwf	17	;volatile
  2418                           
  2419                           ;Project_ATCS_Decorder_Module.c: 21:                     EECON1 = EE_STORE.EE_CONFIG;
  2420     026A  0020               	movlb	0	; select bank0
  2421     026B  084D               	movf	_EE_STORE+1,w
  2422     026C  0023               	movlb	3	; select bank3
  2423     026D  0095               	movwf	21	;volsfr
  2424     026E                     i1l153:	
  2425                           ;Project_ATCS_Decorder_Module.c: 22:                     while (EECON1bits.RD);
  2426                           
  2427     026E  1815               	btfsc	21,0	;volsfr
  2428     026F  2A6E               	goto	i1l153
  2429                           
  2430                           ;Project_ATCS_Decorder_Module.c: 23:                     EE_STORE.EE_DATA[COUNT] = EEDAT
      +                          ;
  2431     0270  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2432     0271  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2433     0272  0086               	movwf	6
  2434     0273  0187               	clrf	7
  2435     0274  0813               	movf	19,w	;volatile
  2436     0275  3FC0               	movwi [0]fsr1
  2437     0276  0814               	movf	20,w	;volatile
  2438     0277  3FC1               	movwi [1]fsr1
  2439                           
  2440                           ;Project_ATCS_Decorder_Module.c: 24:                     INTCONbits.GIE = 1;
  2441     0278  178B               	bsf	11,7	;volatile
  2442                           
  2443                           ;Project_ATCS_Decorder_Module.c: 25:                     EE_STORE.EE_REPORT[COUNT] = 0x0
      +                          0;
  2444     0279  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2445     027A  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2446     027B  0086               	movwf	6
  2447     027C  0187               	clrf	7
  2448     027D  0181               	clrf	1
  2449     027E  0008               	return
  2450     027F                     i1l1554:
  2451                           
  2452                           ;Project_ATCS_Decorder_Module.c: 28:                 COUNT++;
  2453     027F  3001               	movlw	1
  2454     0280  00F0               	movwf	??i1_EEPROM_SELECT
  2455     0281  0870               	movf	??i1_EEPROM_SELECT,w
  2456     0282  07F4               	addwf	i1EEPROM_SELECT@COUNT,f
  2457                           
  2458                           ;Project_ATCS_Decorder_Module.c: 29:                 EEADR = EE_STORE.EE_ADRS++;
  2459     0283  084F               	movf	_EE_STORE+3,w
  2460     0284  0023               	movlb	3	; select bank3
  2461     0285  0092               	movwf	18	;volatile
  2462     0286  0020               	movlb	0	; select bank0
  2463     0287  084E               	movf	_EE_STORE+2,w
  2464     0288  0023               	movlb	3	; select bank3
  2465     0289  0091               	movwf	17	;volatile
  2466     028A  3001               	movlw	1
  2467     028B  0020               	movlb	0	; select bank0
  2468     028C  07CE               	addwf	_EE_STORE+2,f
  2469     028D  3000               	movlw	0
  2470     028E  3DCF               	addwfc	_EE_STORE+3,f
  2471                           
  2472                           ;Project_ATCS_Decorder_Module.c: 30:             }while(COUNT < 4);
  2473     028F  3004               	movlw	4
  2474     0290  0274               	subwf	i1EEPROM_SELECT@COUNT,w
  2475     0291  1803               	btfsc	3,0
  2476     0292  0008               	return
  2477     0293  2A5C               	goto	i1l1544
  2478     0294                     i1l1562:
  2479                           
  2480                           ;Project_ATCS_Decorder_Module.c: 35:                 if(EE_STORE.EE_REPORT[COUNT]){
  2481     0294  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2482     0295  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2483     0296  0086               	movwf	6
  2484     0297  0187               	clrf	7
  2485     0298  0801               	movf	1,w
  2486     0299  1903               	btfsc	3,2
  2487     029A  2AB6               	goto	i1l1570
  2488                           
  2489                           ;Project_ATCS_Decorder_Module.c: 36:                     EEADR = EE_STORE.EE_ADRS;
  2490     029B  084F               	movf	_EE_STORE+3,w
  2491     029C  0023               	movlb	3	; select bank3
  2492     029D  0092               	movwf	18	;volatile
  2493     029E  0020               	movlb	0	; select bank0
  2494     029F  084E               	movf	_EE_STORE+2,w
  2495     02A0  0023               	movlb	3	; select bank3
  2496     02A1  0091               	movwf	17	;volatile
  2497                           
  2498                           ;Project_ATCS_Decorder_Module.c: 37:                     EECON1 = EE_STORE.EE_CONFIG;
  2499     02A2  0020               	movlb	0	; select bank0
  2500     02A3  084D               	movf	_EE_STORE+1,w
  2501     02A4  0023               	movlb	3	; select bank3
  2502     02A5  0095               	movwf	21	;volsfr
  2503                           
  2504                           ;Project_ATCS_Decorder_Module.c: 38:                     EECON1bits.RD = 1;
  2505     02A6  1415               	bsf	21,0	;volsfr
  2506     02A7                     i1l161:	
  2507                           ;Project_ATCS_Decorder_Module.c: 39:                     while (EECON1bits.RD);
  2508                           
  2509     02A7  1815               	btfsc	21,0	;volsfr
  2510     02A8  2AA7               	goto	i1l161
  2511                           
  2512                           ;Project_ATCS_Decorder_Module.c: 40:                     EE_STORE.EE_DATA[COUNT] = EEDAT
      +                          ;
  2513     02A9  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2514     02AA  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2515     02AB  0086               	movwf	6
  2516     02AC  0187               	clrf	7
  2517     02AD  0813               	movf	19,w	;volatile
  2518     02AE  3FC0               	movwi [0]fsr1
  2519     02AF  0814               	movf	20,w	;volatile
  2520     02B0  3FC1               	movwi [1]fsr1
  2521                           
  2522                           ;Project_ATCS_Decorder_Module.c: 41:                     EE_STORE.EE_REPORT[COUNT] = 0x0
      +                          0;
  2523     02B1  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2524     02B2  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2525     02B3  0086               	movwf	6
  2526     02B4  0187               	clrf	7
  2527     02B5  0181               	clrf	1
  2528     02B6                     i1l1570:
  2529                           
  2530                           ;Project_ATCS_Decorder_Module.c: 43:                 EE_STORE.EE_ADRS++;
  2531     02B6  3001               	movlw	1
  2532     02B7  0020               	movlb	0	; select bank0
  2533     02B8  07CE               	addwf	_EE_STORE+2,f
  2534     02B9  3000               	movlw	0
  2535     02BA  3DCF               	addwfc	_EE_STORE+3,f
  2536                           
  2537                           ;Project_ATCS_Decorder_Module.c: 44:             } while (COUNT < 4);
  2538     02BB  3004               	movlw	4
  2539     02BC  0274               	subwf	i1EEPROM_SELECT@COUNT,w
  2540     02BD  1C03               	skipc
  2541     02BE  2A94               	goto	i1l1562
  2542                           
  2543                           ;Project_ATCS_Decorder_Module.c: 45:             INTCONbits.GIE = 1;
  2544     02BF  178B               	bsf	11,7	;volatile
  2545                           
  2546                           ;Project_ATCS_Decorder_Module.c: 46:             return;
  2547     02C0  0008               	return
  2548     02C1                     i1l165:	
  2549                           ;Project_ATCS_Decorder_Module.c: 48:         case EE_WRITE_UID:
  2550                           
  2551                           
  2552                           ;Project_ATCS_Decorder_Module.c: 49:             INTCONbits.GIE = 0;
  2553     02C1  138B               	bcf	11,7	;volatile
  2554                           
  2555                           ;Project_ATCS_Decorder_Module.c: 50:             UnINT EE_SAVE = EE_STORE.EE_ADRS;
  2556     02C2  084F               	movf	_EE_STORE+3,w
  2557     02C3  00F3               	movwf	i1EEPROM_SELECT@EE_SAVE+1
  2558     02C4  084E               	movf	_EE_STORE+2,w
  2559     02C5  00F2               	movwf	i1EEPROM_SELECT@EE_SAVE
  2560     02C6                     i1l1576:
  2561                           
  2562                           ;Project_ATCS_Decorder_Module.c: 52:                 if(EE_STORE.EE_REPORT[COUNT]){
  2563     02C6  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2564     02C7  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2565     02C8  0086               	movwf	6
  2566     02C9  0187               	clrf	7
  2567     02CA  0801               	movf	1,w
  2568     02CB  1903               	btfsc	3,2
  2569     02CC  2AE3               	goto	i1l1590
  2570                           
  2571                           ;Project_ATCS_Decorder_Module.c: 53:                     EEADR = EE_STORE.EE_ADRS;
  2572     02CD  084F               	movf	_EE_STORE+3,w
  2573     02CE  0023               	movlb	3	; select bank3
  2574     02CF  0092               	movwf	18	;volatile
  2575     02D0  0020               	movlb	0	; select bank0
  2576     02D1  084E               	movf	_EE_STORE+2,w
  2577     02D2  0023               	movlb	3	; select bank3
  2578     02D3  0091               	movwf	17	;volatile
  2579                           
  2580                           ;Project_ATCS_Decorder_Module.c: 54:                     EEDAT = EE_STORE.EE_DATA[COUNT]
      +                          ;
  2581     02D4  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2582     02D5  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2583     02D6  0086               	movwf	6
  2584     02D7  0187               	clrf	7
  2585     02D8  3F40               	moviw [0]fsr1
  2586     02D9  0093               	movwf	19	;volatile
  2587     02DA  3F41               	moviw [1]fsr1
  2588     02DB  0094               	movwf	20	;volatile
  2589                           
  2590                           ;Project_ATCS_Decorder_Module.c: 55:                     EECON1 = 0x64;
  2591     02DC  3064               	movlw	100
  2592     02DD  0095               	movwf	21	;volsfr
  2593                           
  2594                           ;Project_ATCS_Decorder_Module.c: 56:                     EECON2 = 0x55;
  2595     02DE  3055               	movlw	85
  2596     02DF  0096               	movwf	22	;volsfr
  2597                           
  2598                           ;Project_ATCS_Decorder_Module.c: 57:                     EECON2 = 0xAA;
  2599     02E0  30AA               	movlw	170
  2600     02E1  0096               	movwf	22	;volsfr
  2601                           
  2602                           ;Project_ATCS_Decorder_Module.c: 58:                     EECON1bits.WR = 1;
  2603     02E2  1495               	bsf	21,1	;volsfr
  2604     02E3                     i1l1590:
  2605                           
  2606                           ;Project_ATCS_Decorder_Module.c: 60:                 COUNT++;
  2607     02E3  3001               	movlw	1
  2608     02E4  00F0               	movwf	??i1_EEPROM_SELECT
  2609     02E5  0870               	movf	??i1_EEPROM_SELECT,w
  2610     02E6  07F4               	addwf	i1EEPROM_SELECT@COUNT,f
  2611                           
  2612                           ;Project_ATCS_Decorder_Module.c: 61:                 EE_STORE.EE_ADRS++;
  2613     02E7  3001               	movlw	1
  2614     02E8  0020               	movlb	0	; select bank0
  2615     02E9  07CE               	addwf	_EE_STORE+2,f
  2616     02EA  3000               	movlw	0
  2617     02EB  3DCF               	addwfc	_EE_STORE+3,f
  2618                           
  2619                           ;Project_ATCS_Decorder_Module.c: 62:             } while (COUNT < 4);
  2620     02EC  3004               	movlw	4
  2621     02ED  0274               	subwf	i1EEPROM_SELECT@COUNT,w
  2622     02EE  1C03               	skipc
  2623     02EF  2AC6               	goto	i1l1576
  2624                           
  2625                           ;Project_ATCS_Decorder_Module.c: 63:             EE_STORE.EE_ADRS = EE_SAVE;
  2626     02F0  0873               	movf	i1EEPROM_SELECT@EE_SAVE+1,w
  2627     02F1  00CF               	movwf	_EE_STORE+3
  2628     02F2  0872               	movf	i1EEPROM_SELECT@EE_SAVE,w
  2629     02F3  00CE               	movwf	_EE_STORE+2
  2630                           
  2631                           ;Project_ATCS_Decorder_Module.c: 65:             EECON1 = 0x44;
  2632     02F4  3044               	movlw	68
  2633     02F5  0023               	movlb	3	; select bank3
  2634     02F6  0095               	movwf	21	;volsfr
  2635                           
  2636                           ;Project_ATCS_Decorder_Module.c: 66:             EECON2 = 0x55;
  2637     02F7  3055               	movlw	85
  2638     02F8  0096               	movwf	22	;volsfr
  2639                           
  2640                           ;Project_ATCS_Decorder_Module.c: 67:             EECON2 = 0xAA;
  2641     02F9  30AA               	movlw	170
  2642     02FA  0096               	movwf	22	;volsfr
  2643                           
  2644                           ;Project_ATCS_Decorder_Module.c: 69:             EECON1bits.WR = 1;
  2645     02FB  1495               	bsf	21,1	;volsfr
  2646                           
  2647                           ;Project_ATCS_Decorder_Module.c: 70:             __nop();
  2648     02FC  0000               	nop
  2649                           
  2650                           ;Project_ATCS_Decorder_Module.c: 71:             __nop();
  2651     02FD  0000               	nop
  2652                           
  2653                           ;Project_ATCS_Decorder_Module.c: 72:             INTCONbits.GIE = 1;
  2654     02FE  178B               	bsf	11,7	;volatile
  2655     02FF  0008               	return
  2656     0300                     i1l169:	
  2657                           ;Project_ATCS_Decorder_Module.c: 75:         case EE_VERIFY_UID:
  2658                           
  2659                           
  2660                           ;Project_ATCS_Decorder_Module.c: 76:             INTCONbits.GIE = 0;
  2661     0300  138B               	bcf	11,7	;volatile
  2662     0301                     i1l1608:
  2663                           
  2664                           ;Project_ATCS_Decorder_Module.c: 78:                 if(EE_STORE.EE_REPORT[COUNT]){
  2665     0301  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2666     0302  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2667     0303  0086               	movwf	6
  2668     0304  0187               	clrf	7
  2669     0305  0801               	movf	1,w
  2670     0306  1903               	btfsc	3,2
  2671     0307  2B2F               	goto	i1l1618
  2672                           
  2673                           ;Project_ATCS_Decorder_Module.c: 79:                     EEADR = EE_STORE.EE_ADRS;
  2674     0308  084F               	movf	_EE_STORE+3,w
  2675     0309  0023               	movlb	3	; select bank3
  2676     030A  0092               	movwf	18	;volatile
  2677     030B  0020               	movlb	0	; select bank0
  2678     030C  084E               	movf	_EE_STORE+2,w
  2679     030D  0023               	movlb	3	; select bank3
  2680     030E  0091               	movwf	17	;volatile
  2681                           
  2682                           ;Project_ATCS_Decorder_Module.c: 80:                     EECON1 = 0x41;
  2683     030F  3041               	movlw	65
  2684     0310  0095               	movwf	21	;volsfr
  2685     0311                     i1l172:	
  2686                           ;Project_ATCS_Decorder_Module.c: 81:                     while (EECON1bits.RD);
  2687                           
  2688     0311  1815               	btfsc	21,0	;volsfr
  2689     0312  2B11               	goto	i1l172
  2690                           
  2691                           ;Project_ATCS_Decorder_Module.c: 82:                     if (EEDAT != EE_STORE.EE_DATA[C
      +                          OUNT]) {
  2692     0313  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2693     0314  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2694     0315  0086               	movwf	6
  2695     0316  0187               	clrf	7
  2696     0317  3F40               	moviw [0]fsr1
  2697     0318  00F0               	movwf	??i1_EEPROM_SELECT
  2698     0319  3F41               	moviw [1]fsr1
  2699     031A  00F1               	movwf	??i1_EEPROM_SELECT+1
  2700     031B  0814               	movf	20,w	;volatile
  2701     031C  0671               	xorwf	??i1_EEPROM_SELECT+1,w
  2702     031D  1D03               	skipz
  2703     031E  2B21               	goto	u88_25
  2704     031F  0813               	movf	19,w	;volatile
  2705     0320  0670               	xorwf	??i1_EEPROM_SELECT,w
  2706     0321                     u88_25:
  2707     0321  1903               	skipnz
  2708     0322  2B2A               	goto	i1l1616
  2709                           
  2710                           ;Project_ATCS_Decorder_Module.c: 83:                         EE_STORE.EE_REPORT[COUNT] =
      +                           0xFF;
  2711     0323  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2712     0324  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2713     0325  0086               	movwf	6
  2714     0326  0187               	clrf	7
  2715     0327  30FF               	movlw	255
  2716     0328  0081               	movwf	1
  2717                           
  2718                           ;Project_ATCS_Decorder_Module.c: 84:                     } else {
  2719     0329  2B2F               	goto	i1l1618
  2720     032A                     i1l1616:
  2721                           
  2722                           ;Project_ATCS_Decorder_Module.c: 85:                         EE_STORE.EE_REPORT[COUNT] =
      +                           0x00;
  2723     032A  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2724     032B  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2725     032C  0086               	movwf	6
  2726     032D  0187               	clrf	7
  2727     032E  0181               	clrf	1
  2728     032F                     i1l1618:
  2729                           
  2730                           ;Project_ATCS_Decorder_Module.c: 88:                 COUNT++;
  2731     032F  3001               	movlw	1
  2732     0330  00F0               	movwf	??i1_EEPROM_SELECT
  2733     0331  0870               	movf	??i1_EEPROM_SELECT,w
  2734     0332  07F4               	addwf	i1EEPROM_SELECT@COUNT,f
  2735                           
  2736                           ;Project_ATCS_Decorder_Module.c: 89:                 EE_STORE.EE_ADRS++;
  2737     0333  3001               	movlw	1
  2738     0334  0020               	movlb	0	; select bank0
  2739     0335  07CE               	addwf	_EE_STORE+2,f
  2740     0336  3000               	movlw	0
  2741     0337  3DCF               	addwfc	_EE_STORE+3,f
  2742                           
  2743                           ;Project_ATCS_Decorder_Module.c: 90:             } while (COUNT < 4);
  2744     0338  3004               	movlw	4
  2745     0339  0274               	subwf	i1EEPROM_SELECT@COUNT,w
  2746     033A  1C03               	skipc
  2747     033B  2B01               	goto	i1l1608
  2748                           
  2749                           ;Project_ATCS_Decorder_Module.c: 91:             INTCONbits.GIE = 1;
  2750     033C  178B               	bsf	11,7	;volatile
  2751                           
  2752                           ;Project_ATCS_Decorder_Module.c: 92:             return;
  2753     033D  0008               	return
  2754     033E                     i1l1624:
  2755                           
  2756                           ;Project_ATCS_Decorder_Module.c: 96:                 if(EE_STORE.EE_REPORT[COUNT]){
  2757     033E  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2758     033F  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2759     0340  0086               	movwf	6
  2760     0341  0187               	clrf	7
  2761     0342  0801               	movf	1,w
  2762     0343  1903               	btfsc	3,2
  2763     0344  2B5F               	goto	i1l1646
  2764                           
  2765                           ;Project_ATCS_Decorder_Module.c: 97:                     EEADR = EE_STORE.EE_ADRS;
  2766     0345  084F               	movf	_EE_STORE+3,w
  2767     0346  0023               	movlb	3	; select bank3
  2768     0347  0092               	movwf	18	;volatile
  2769     0348  0020               	movlb	0	; select bank0
  2770     0349  084E               	movf	_EE_STORE+2,w
  2771     034A  0023               	movlb	3	; select bank3
  2772     034B  0091               	movwf	17	;volatile
  2773                           
  2774                           ;Project_ATCS_Decorder_Module.c: 98:                     EEDAT = EE_STORE.EE_DATA[COUNT]
      +                          ;
  2775     034C  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2776     034D  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2777     034E  0086               	movwf	6
  2778     034F  0187               	clrf	7
  2779     0350  3F40               	moviw [0]fsr1
  2780     0351  0093               	movwf	19	;volatile
  2781     0352  3F41               	moviw [1]fsr1
  2782     0353  0094               	movwf	20	;volatile
  2783                           
  2784                           ;Project_ATCS_Decorder_Module.c: 99:                     EECON1 = 0x44;
  2785     0354  3044               	movlw	68
  2786     0355  0095               	movwf	21	;volsfr
  2787                           
  2788                           ;Project_ATCS_Decorder_Module.c: 100:                     EECON2 = 0x55;
  2789     0356  3055               	movlw	85
  2790     0357  0096               	movwf	22	;volsfr
  2791                           
  2792                           ;Project_ATCS_Decorder_Module.c: 101:                     EECON2 = 0xAA;
  2793     0358  30AA               	movlw	170
  2794     0359  0096               	movwf	22	;volsfr
  2795                           
  2796                           ;Project_ATCS_Decorder_Module.c: 102:                     EECON1bits.WR = 1;
  2797     035A  1495               	bsf	21,1	;volsfr
  2798                           
  2799                           ;Project_ATCS_Decorder_Module.c: 103:                     __nop();
  2800     035B  0000               	nop
  2801                           
  2802                           ;Project_ATCS_Decorder_Module.c: 104:                     __nop();
  2803     035C  0000               	nop
  2804                           
  2805                           ;Project_ATCS_Decorder_Module.c: 105:                     INTCONbits.GIE = 1;
  2806     035D  178B               	bsf	11,7	;volatile
  2807     035E  0008               	return
  2808     035F                     i1l1646:
  2809                           
  2810                           ;Project_ATCS_Decorder_Module.c: 108:                 COUNT++;
  2811     035F  3001               	movlw	1
  2812     0360  00F0               	movwf	??i1_EEPROM_SELECT
  2813     0361  0870               	movf	??i1_EEPROM_SELECT,w
  2814     0362  07F4               	addwf	i1EEPROM_SELECT@COUNT,f
  2815                           
  2816                           ;Project_ATCS_Decorder_Module.c: 109:                 EEADR = EE_STORE.EE_ADRS++;
  2817     0363  084F               	movf	_EE_STORE+3,w
  2818     0364  0023               	movlb	3	; select bank3
  2819     0365  0092               	movwf	18	;volatile
  2820     0366  0020               	movlb	0	; select bank0
  2821     0367  084E               	movf	_EE_STORE+2,w
  2822     0368  0023               	movlb	3	; select bank3
  2823     0369  0091               	movwf	17	;volatile
  2824     036A  3001               	movlw	1
  2825     036B  0020               	movlb	0	; select bank0
  2826     036C  07CE               	addwf	_EE_STORE+2,f
  2827     036D  3000               	movlw	0
  2828     036E  3DCF               	addwfc	_EE_STORE+3,f
  2829                           
  2830                           ;Project_ATCS_Decorder_Module.c: 110:             }while(COUNT < 4);
  2831     036F  3004               	movlw	4
  2832     0370  0274               	subwf	i1EEPROM_SELECT@COUNT,w
  2833     0371  1C03               	skipc
  2834     0372  2B3E               	goto	i1l1624
  2835                           
  2836                           ;Project_ATCS_Decorder_Module.c: 111:             INTCONbits.GIE = 1;
  2837     0373  178B               	bsf	11,7	;volatile
  2838                           
  2839                           ;Project_ATCS_Decorder_Module.c: 112:             return;
  2840     0374  0008               	return
  2841     0375                     i1l1654:
  2842                           
  2843                           ;Project_ATCS_Decorder_Module.c: 116:                 if(EE_STORE.EE_REPORT[COUNT]){
  2844     0375  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2845     0376  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2846     0377  0086               	movwf	6
  2847     0378  0187               	clrf	7
  2848     0379  0801               	movf	1,w
  2849     037A  1903               	btfsc	3,2
  2850     037B  2BAC               	goto	i1l1666
  2851                           
  2852                           ;Project_ATCS_Decorder_Module.c: 117:                     EEADR = EE_STORE.EE_ADRS;
  2853     037C  084F               	movf	_EE_STORE+3,w
  2854     037D  0023               	movlb	3	; select bank3
  2855     037E  0092               	movwf	18	;volatile
  2856     037F  0020               	movlb	0	; select bank0
  2857     0380  084E               	movf	_EE_STORE+2,w
  2858     0381  0023               	movlb	3	; select bank3
  2859     0382  0091               	movwf	17	;volatile
  2860                           
  2861                           ;Project_ATCS_Decorder_Module.c: 118:                     EECON1 = 0x01;
  2862     0383  3001               	movlw	1
  2863     0384  0095               	movwf	21	;volsfr
  2864     0385                     i1l185:	
  2865                           ;Project_ATCS_Decorder_Module.c: 119:                     while (EECON1bits.RD);
  2866                           
  2867     0385  1815               	btfsc	21,0	;volsfr
  2868     0386  2B85               	goto	i1l185
  2869                           
  2870                           ;Project_ATCS_Decorder_Module.c: 120:                     EE_STORE.EE_DATA[COUNT] = EEDA
      +                          T;
  2871     0387  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2872     0388  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2873     0389  0086               	movwf	6
  2874     038A  0187               	clrf	7
  2875     038B  0813               	movf	19,w	;volatile
  2876     038C  3FC0               	movwi [0]fsr1
  2877     038D  0814               	movf	20,w	;volatile
  2878     038E  3FC1               	movwi [1]fsr1
  2879                           
  2880                           ;Project_ATCS_Decorder_Module.c: 121:                     if (EEDAT != EE_STORE.EE_DATA[
      +                          COUNT]) {
  2881     038F  3574               	lslf	i1EEPROM_SELECT@COUNT,w
  2882     0390  3E50               	addlw	(low ((_EE_STORE| 0+4)))& (0+255)
  2883     0391  0086               	movwf	6
  2884     0392  0187               	clrf	7
  2885     0393  3F40               	moviw [0]fsr1
  2886     0394  00F0               	movwf	??i1_EEPROM_SELECT
  2887     0395  3F41               	moviw [1]fsr1
  2888     0396  00F1               	movwf	??i1_EEPROM_SELECT+1
  2889     0397  0814               	movf	20,w	;volatile
  2890     0398  0671               	xorwf	??i1_EEPROM_SELECT+1,w
  2891     0399  1D03               	skipz
  2892     039A  2B9D               	goto	u94_25
  2893     039B  0813               	movf	19,w	;volatile
  2894     039C  0670               	xorwf	??i1_EEPROM_SELECT,w
  2895     039D                     u94_25:
  2896     039D  1903               	skipnz
  2897     039E  2BA6               	goto	i1l1662
  2898                           
  2899                           ;Project_ATCS_Decorder_Module.c: 122:                         EE_STORE.EE_REPORT[COUNT] 
      +                          = 0xFF;
  2900     039F  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2901     03A0  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2902     03A1  0086               	movwf	6
  2903     03A2  0187               	clrf	7
  2904     03A3  30FF               	movlw	255
  2905     03A4  0081               	movwf	1
  2906                           
  2907                           ;Project_ATCS_Decorder_Module.c: 123:                     } else {
  2908     03A5  0008               	return
  2909     03A6                     i1l1662:
  2910                           
  2911                           ;Project_ATCS_Decorder_Module.c: 124:                         EE_STORE.EE_REPORT[COUNT] 
      +                          = 0x00;
  2912     03A6  0874               	movf	i1EEPROM_SELECT@COUNT,w
  2913     03A7  3E58               	addlw	(low ((_EE_STORE| 0+12)))& (0+255)
  2914     03A8  0086               	movwf	6
  2915     03A9  0187               	clrf	7
  2916     03AA  0181               	clrf	1
  2917     03AB  0008               	return
  2918     03AC                     i1l1666:
  2919                           
  2920                           ;Project_ATCS_Decorder_Module.c: 128:                 COUNT++;
  2921     03AC  3001               	movlw	1
  2922     03AD  00F0               	movwf	??i1_EEPROM_SELECT
  2923     03AE  0870               	movf	??i1_EEPROM_SELECT,w
  2924     03AF  07F4               	addwf	i1EEPROM_SELECT@COUNT,f
  2925                           
  2926                           ;Project_ATCS_Decorder_Module.c: 129:                 EEADR = EE_STORE.EE_ADRS++;
  2927     03B0  084F               	movf	_EE_STORE+3,w
  2928     03B1  0023               	movlb	3	; select bank3
  2929     03B2  0092               	movwf	18	;volatile
  2930     03B3  0020               	movlb	0	; select bank0
  2931     03B4  084E               	movf	_EE_STORE+2,w
  2932     03B5  0023               	movlb	3	; select bank3
  2933     03B6  0091               	movwf	17	;volatile
  2934     03B7  3001               	movlw	1
  2935     03B8  0020               	movlb	0	; select bank0
  2936     03B9  07CE               	addwf	_EE_STORE+2,f
  2937     03BA  3000               	movlw	0
  2938     03BB  3DCF               	addwfc	_EE_STORE+3,f
  2939                           
  2940                           ;Project_ATCS_Decorder_Module.c: 130:             }while(COUNT < 4);
  2941     03BC  3004               	movlw	4
  2942     03BD  0274               	subwf	i1EEPROM_SELECT@COUNT,w
  2943     03BE  1C03               	skipc
  2944     03BF  2B75               	goto	i1l1654
  2945                           
  2946                           ;Project_ATCS_Decorder_Module.c: 131:             INTCONbits.GIE = 1;
  2947     03C0  178B               	bsf	11,7	;volatile
  2948                           
  2949                           ;Project_ATCS_Decorder_Module.c: 132:             return;
  2950     03C1  0008               	return
  2951     03C2                     i1l1676:
  2952     03C2  0020               	movlb	0	; select bank0
  2953     03C3  084C               	movf	_EE_STORE,w
  2954     03C4  00F0               	movwf	??i1_EEPROM_SELECT
  2955     03C5  01F1               	clrf	??i1_EEPROM_SELECT+1
  2956                           
  2957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2958                           ; Switch size 1, requested type "simple"
  2959                           ; Number of cases is 1, Range of values is 0 to 0
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte            4     3 (average)
  2963                           ; direct_byte            8     6 (fixed)
  2964                           ; jumptable            260     6 (fixed)
  2965                           ;	Chosen strategy is simple_byte
  2966     03C6  0871               	movf	??i1_EEPROM_SELECT+1,w
  2967     03C7  3A00               	xorlw	0	; case 0
  2968     03C8  1903               	skipnz
  2969     03C9  2BCB               	goto	i1l1942
  2970     03CA  2BDF               	goto	i1l156
  2971     03CB                     i1l1942:
  2972                           
  2973                           ; Switch size 1, requested type "simple"
  2974                           ; Number of cases is 6, Range of values is 0 to 5
  2975                           ; switch strategies available:
  2976                           ; Name         Instructions Cycles
  2977                           ; direct_byte           18     6 (fixed)
  2978                           ; simple_byte           19    10 (average)
  2979                           ; jumptable            260     6 (fixed)
  2980                           ;	Chosen strategy is simple_byte
  2981     03CB  0870               	movf	??i1_EEPROM_SELECT,w
  2982     03CC  3A00               	xorlw	0	; case 0
  2983     03CD  1903               	skipnz
  2984     03CE  2A5C               	goto	i1l1544
  2985     03CF  3A01               	xorlw	1	; case 1
  2986     03D0  1903               	skipnz
  2987     03D1  2A94               	goto	i1l1562
  2988     03D2  3A03               	xorlw	3	; case 2
  2989     03D3  1903               	skipnz
  2990     03D4  2AC1               	goto	i1l165
  2991     03D5  3A01               	xorlw	1	; case 3
  2992     03D6  1903               	skipnz
  2993     03D7  2B00               	goto	i1l169
  2994     03D8  3A07               	xorlw	7	; case 4
  2995     03D9  1903               	skipnz
  2996     03DA  2B3E               	goto	i1l1624
  2997     03DB  3A01               	xorlw	1	; case 5
  2998     03DC  1903               	skipnz
  2999     03DD  2B75               	goto	i1l1654
  3000     03DE  2BDF               	goto	i1l156
  3001     03DF                     i1l156:
  3002     03DF  0008               	return
  3003     03E0                     __end_ofi1_EEPROM_SELECT:
  3004     007E                     btemp	set	126	;btemp
  3005     007E                     int$flags	set	126
  3006     007E                     wtemp0	set	126
  3007                           
  3008                           	psect	idloc
  3009                           
  3010                           ;Config register IDLOC0 @ 0x8000
  3011                           ;	unspecified, using default values
  3012     8000                     	org	32768
  3013     8000  3FFF               	dw	16383
  3014                           
  3015                           ;Config register IDLOC1 @ 0x8001
  3016                           ;	unspecified, using default values
  3017     8001                     	org	32769
  3018     8001  3FFF               	dw	16383
  3019                           
  3020                           ;Config register IDLOC2 @ 0x8002
  3021                           ;	unspecified, using default values
  3022     8002                     	org	32770
  3023     8002  3FFF               	dw	16383
  3024                           
  3025                           ;Config register IDLOC3 @ 0x8003
  3026                           ;	unspecified, using default values
  3027     8003                     	org	32771
  3028     8003  3FFF               	dw	16383
  3029                           
  3030                           	psect	config
  3031                           
  3032                           ;Config register CONFIG1 @ 0x8007
  3033                           ;	Oscillator Selection
  3034                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3035                           ;	Watchdog Timer Enable
  3036                           ;	WDTE = OFF, WDT disabled
  3037                           ;	Power-up Timer Enable
  3038                           ;	PWRTE = ON, PWRT enabled
  3039                           ;	MCLR Pin Function Select
  3040                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3041                           ;	Flash Program Memory Code Protection
  3042                           ;	CP = OFF, Program memory code protection is disabled
  3043                           ;	Data Memory Code Protection
  3044                           ;	CPD = OFF, Data memory code protection is disabled
  3045                           ;	Brown-out Reset Enable
  3046                           ;	BOREN = ON, Brown-out Reset enabled
  3047                           ;	Clock Out Enable
  3048                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3049                           ;	Internal/External Switchover
  3050                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3051                           ;	Fail-Safe Clock Monitor Enable
  3052                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3053     8007                     	org	32775
  3054     8007  0F84               	dw	3972
  3055                           
  3056                           ;Config register CONFIG2 @ 0x8008
  3057                           ;	Flash Memory Self-Write Protection
  3058                           ;	WRT = OFF, Write protection off
  3059                           ;	PLL Enable
  3060                           ;	PLLEN = OFF, 4x PLL disabled
  3061                           ;	Stack Overflow/Underflow Reset Enable
  3062                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3063                           ;	Brown-out Reset Voltage Selection
  3064                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  3065                           ;	Low-Voltage Programming Enable
  3066                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3067     8008                     	org	32776
  3068     8008  1AFF               	dw	6911

Data Sizes:
    Strings     0
    Constant    69
    Data        16
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     44      62

Pointer List with Targets:

    CONFIG_SET@P_RANGE	PTR unsigned char  size(1) Largest target is 1
		 -> main@DCC_PACKET_RANGE(BANK0[1]), 

    CONFIG_SET@DATA	PTR unsigned char  size(1) Largest target is 32
		 -> main@BYPASS(BANK0[32]), 

    DEC_SET@P_RANGE	PTR unsigned char  size(1) Largest target is 1
		 -> main@DCC_PACKET_RANGE(BANK0[1]), 

    DEC_SET@DATA	PTR unsigned char  size(1) Largest target is 32
		 -> main@BYPASS(BANK0[32]), 

    PACKET_CONTROL@P_RANGE	PTR unsigned char  size(1) Largest target is 1
		 -> main@DCC_PACKET_RANGE(BANK0[1]), 

    PACKET_CONTROL@DATA	PTR unsigned char  size(1) Largest target is 32
		 -> main@BYPASS(BANK0[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_EEPROM_SELECT

Critical Paths under _main in BANK0

    _main->_PACKET_CONTROL
    _PACKET_CONTROL->_CONFIG_SET
    _PACKET_CONTROL->_DEC_SET

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    1544
                                              7 BANK0     37    37      0
                      _EEPROM_SELECT
                     _PACKET_CONTROL
 ---------------------------------------------------------------------------------
 (1) _PACKET_CONTROL                                       5     4      1     580
                                              2 BANK0      5     4      1
                         _CONFIG_SET
                            _DEC_SET
 ---------------------------------------------------------------------------------
 (2) _DEC_SET                                              2     1      1     126
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CONFIG_SET                                           2     1      1     126
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_SELECT                                        5     5      0     579
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     757
                                              5 COMMON     3     3      0
                    i1_EEPROM_SELECT
 ---------------------------------------------------------------------------------
 (4) i1_EEPROM_SELECT                                      5     5      0     579
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_SELECT
   _PACKET_CONTROL
     _CONFIG_SET
     _DEC_SET

 _isr (ROOT)
   i1_EEPROM_SELECT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2C      3E       6       77.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      48       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 14 21:49:10 2023

                    l202 0486                      l203 0488                      l161 0110  
                    l153 00D4                      l172 017E                      l156 0258  
                    l165 012C                      l185 01F8                      l169 016D  
                    l197 04BA                      l198 0478                      l199 047A  
                    _PR2 001B                      u755 0217                      u695 0193  
                    u775 0495                      _isr 0004                      wreg 0009  
        __end_of_DEC_SET 0517                     l1402 0131                     l1502 023C  
                   l1416 0150                     l1512 046F                     l1450 01AF  
                   l1442 019C                     l1434 016E                     l1370 00C2  
                   l1522 0481                     l1444 01A1                     l1380 00E8  
                   l1532 048F                     l1526 048A                     l1518 047C  
                   l1480 01E8                     l1472 01D2                     l1712 040A  
                   l1722 0416                     l1492 0226                     l1396 0122  
                   l1388 00FD                     l1740 043F                     l1488 0220  
                   l1746 044F                     l1738 042F                     l1940 0244  
                   l1938 04A0                     ?_isr 0070                     _DATA 0079  
                   u1035 0465                     _PIE1 0091                     _PIE2 0092  
                   _PIR1 0011                     i1l97 0092                     i1l98 003E  
                   _TMR1 0016                     _STCR 005C                     _main 03E0  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E         __end_of_DCC_ADRS 0516                     start 00AC  
         CONFIG_SET@DATA 0021       EEPROM_SELECT@COUNT 0024                    ??_isr 0075  
                  ?_main 0070                    _EEADR 0191                    _EEDAT 0193  
                  _T1CON 0018                    _T2CON 001C                    _IOCAF 0393  
                  _IOCAP 0391                    i1l124 00AA                    i1l118 009A  
                  i1l161 02A7                    i1l153 026E                    i1l172 0311  
                  i1l156 03DF                    i1l165 02C1                    i1l185 0385  
                  i1l169 0300                    _STACK 00A0                    _PORTA 000C  
                  _TRISA 008C                    u94_25 039D                    u88_25 0321  
       __end_of_PWM_DATA 04FB                    status 0003                    wtemp0 007E  
  __end_of_EEPROM_SELECT 0259          __initialization 00AD             __end_of_main 046C  
              ??_DEC_SET 0021                   ??_main 0027           DEC_SET@P_RANGE 0020  
                 _CCPR1L 0291                   _EECON1 0195                   _EECON2 0196  
                 _APFCON 011D       PACKET_CONTROL@DATA 0026                   _ANSELA 018C  
       ??_PACKET_CONTROL 0023                   i1l1624 033E                   i1l1616 032A  
                 i1l1608 0301                   i1l1544 025C                   i1l1618 032F  
                 i1l1570 02B6                   i1l1562 0294                   i1l1554 027F  
                 i1l1802 0056                   i1l1820 007F                   i1l1662 03A6  
                 i1l1654 0375                   i1l1646 035F                   i1l1590 02E3  
                 i1l1830 0090                   i1l1806 005F                   i1l1576 02C6  
                 i1l1808 0063                   i1l1666 03AC                   i1l1842 00A3  
                 i1l1676 03C2                   i1l1780 0028                   i1l1942 03CB  
                 i1l1846 00A9                   i1l1784 0031                   i1l1778 0023  
                 _INTCON 000B                   _OSCCON 0099   i1EEPROM_SELECT@EE_SAVE 0072  
           ??_CONFIG_SET 0021  __end_of__initialization 00BB           __pcstackCOMMON 0070  
     __end_of_CONFIG_SET 0518             __pidataBANK0 04FB     main@DCC_PACKET_RANGE 004B  
   EEPROM_SELECT@EE_SAVE 0022               __pbssBANK0 005C               __pmaintext 03E0  
             __pintentry 0004                  _CCP1CON 0293                  _DEC_SET 0516  
                _COUNTER 0078                  __ptext1 046C                  __ptext2 0516  
                __ptext3 0517                  __ptext4 00BE                  __ptext6 0259  
  PACKET_CONTROL@P_RANGE 0022     end_of_initialization 00BB                  init_ram 050B  
                initloop 050C               main@PACKET 0049               main@BYPASS 0029  
      ??i1_EEPROM_SELECT 0070        CONFIG_SET@P_RANGE 0020      start_initialization 00AD  
            __end_of_isr 00AC            _EEPROM_SELECT 00BE              __pdataBANK0 004C  
               ?_DEC_SET 0020              __pbssCOMMON 0078                ___latbits 0000  
          __pcstackBANK0 0020           ?_EEPROM_SELECT 0070                 _DCC_ADRS 0511  
               _COM_FLAG 005D                 _EE_STORE 004C                 _PIR1bits 0011  
               _PIR2bits 0012                 _PSTR1CON 0296                 _PWM_DATA 04BB  
        i1_EEPROM_SELECT 0259                main@count 004A              DEC_SET@DATA 0021  
        ??_EEPROM_SELECT 0020               _EECON1bits 0195           _PACKET_CONTROL 046C  
   i1EEPROM_SELECT@COUNT 0074               _CONFIG_SET 0517   __end_of_PACKET_CONTROL 04BB  
__end_ofi1_EEPROM_SELECT 03E0                 int$flags 007E                 isr@COUNT 0076  
             _INTCONbits 000B                 intlevel1 0000          ?_PACKET_CONTROL 0022  
          __pstringtext1 04BB            __pstringtext2 0511              ?_CONFIG_SET 0020  
       ?i1_EEPROM_SELECT 0070  
